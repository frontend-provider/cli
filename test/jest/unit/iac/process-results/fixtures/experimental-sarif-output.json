{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "originalUriBaseIds": {
        "PROJECTROOT": {
          "uri": "file:///Users/yairzohar/snyk/cli/",
          "description": {
            "text": "The root directory for all project files."
          }
        }
      },
      "tool": {
        "driver": {
          "name": "Snyk IaC",
          "fullName": "Snyk Infrastructure as Code",
          "version": "1.0.0-monorepo",
          "informationUri": "https://docs.snyk.io/products/snyk-infrastructure-as-code",
          "rules": [
            {
              "id": "SNYK-CC-00151",
              "name": "VpcFlowLoggingShouldBeEnabled",
              "shortDescription": {
                "text": "Medium severity - VPC flow logging should be enabled"
              },
              "fullDescription": {
                "text": "VPC flow logging should be enabled. AWS VPC Flow Logs provide visibility into network traffic that traverses the AWS VPC.\nUsers can use the flow logs to detect anomalous traffic or insight during security workflows.\n"
              },
              "help": {
                "text": "Remediation Steps\nEnsure that the https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc is referenced in an https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/flow_log vpc_id field.Example Configuration\nresource \"aws_vpc\" \"valid_vpc\" {\n  # other required fields here\n}\n\nresource \"aws_flow_log\" \"test_flow_log\" {\n  vpc_id         = \"${aws_vpc.valid_vpc.id}\"\n  # other required fields here\n}",
                "markdown": "# Remediation Steps\n\n* Ensure that the [aws_vpc](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc) is referenced in an [aws_flog_log](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/flow_log) `vpc_id` field.\n\n#### Example Configuration\n\n```hcl\nresource \"aws_vpc\" \"valid_vpc\" {\n  # other required fields here\n}\n\nresource \"aws_flow_log\" \"test_flow_log\" {\n  vpc_id         = \"${aws_vpc.valid_vpc.id}\"\n  # other required fields here\n}\n```\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security"
                ],
                "problem": {
                  "severity": "medium"
                }
              },
              "helpUri": "https://snyk.io/security-rules/SNYK-CC-00151"
            },
            {
              "id": "SNYK-CC-TF-5",
              "name": "VpcDefaultSecurityGroupAllowsUnrestrictedIngressTraffic",
              "shortDescription": {
                "text": "Medium severity - VPC default security group allows unrestricted ingress traffic"
              },
              "fullDescription": {
                "text": "Configuring all VPC default security groups to restrict all traffic encourages least privilege security\ngroup development and mindful placement of AWS resources into security groups which in turn reduces the exposure of those resources.\n"
              },
              "help": {
                "text": "Remediation Steps\nEnsure that an https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_security_group or https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group ingress block does NOT contain the value 0.0.0.0/0 in the cidr_blocks (ipv6_cidr_blocks for ipv6) field.Example configuration\nresource \"aws_security_group\" \"example\" {\n  ingress {\n    cidr_blocks = [10.0.0.0/16]\n    from_port   = 5900\n    to_port     = 5900\n    # other required fields here\n  }\n}",
                "markdown": "# Remediation Steps\nEnsure that an [aws_default_security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_security_group) or [aws_security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group) `ingress` block does NOT contain the value `0.0.0.0/0` in the `cidr_blocks` (`ipv6_cidr_blocks` for ipv6) field.\n\n# Example configuration\n```hcl\nresource \"aws_security_group\" \"example\" {\n  ingress {\n    cidr_blocks = [10.0.0.0/16]\n    from_port   = 5900\n    to_port     = 5900\n    # other required fields here\n  }\n}\n```\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security"
                ],
                "problem": {
                  "severity": "medium"
                }
              },
              "helpUri": "https://snyk.io/security-rules/SNYK-CC-TF-5"
            }
          ]
        }
      },
      "automationDetails": {
        "id": "snyk-iac"
      },
      "results": [
        {
          "ruleId": "SNYK-CC-00151",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "plan.json",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-TF-5",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "plan.json",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-00151",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vpc_group.tf",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 5
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-TF-5",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "vpc_group.tf",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 16
                }
              }
            }
          ]
        }
      ]
    }
  ]
}