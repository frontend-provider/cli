{
  "$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version":"2.1.0",
  "runs":[
    {
      "originalUriBaseIds":{
        "PROJECTROOT":{
          "uri":"file:///Users/yairzohar/snyk/cli/",
          "description":{
            "text":"The root directory for all project files."
          }
        }
      },
      "tool":{
        "driver":{
          "name":"Snyk IaC",
          "fullName":"Snyk Infrastructure as Code",
          "version":"1.0.0-monorepo",
          "informationUri":"https://docs.snyk.io/products/snyk-infrastructure-as-code",
          "rules":[
            {
              "id":"SNYK-CC-00024",
              "name":"VpcDefaultSecurityGroupAllowsUnrestrictedIngressTraffic",
              "shortDescription":{
                "text":"Medium severity - VPC default security group allows unrestricted ingress traffic"
              },
              "fullDescription":{
                "text":"Configuring all VPC default security groups to restrict all traffic encourages least privilege security\ngroup development and mindful placement of AWS resources into security groups which in turn reduces the exposure of those resources.\n"
              },
              "help":{
                "text":"Remediation Steps\nEnsure that an https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_security_group or https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group ingress block does NOT contain the value 0.0.0.0/0 in the cidr_blocks (ipv6_cidr_blocks for ipv6) field.# Example configuration\nresource \"aws_security_group\" \"example\" {\n  ingress {\n    cidr_blocks = [10.0.0.0/16]\n    from_port   = 5900\n    to_port     = 5900\n    # other required fields here\n  }\n}References\nhttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
                "markdown":"# Remediation Steps\nEnsure that an [aws_default_security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_security_group) or [aws_security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group) `ingress` block does NOT contain the value `0.0.0.0/0` in the `cidr_blocks` (`ipv6_cidr_blocks` for ipv6) field.\n \n```\n# Example configuration\nresource \"aws_security_group\" \"example\" {\n  ingress {\n    cidr_blocks = [10.0.0.0/16]\n    from_port   = 5900\n    to_port     = 5900\n    # other required fields here\n  }\n}\n```\n \n# References\n* [aws_security_group](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group)\n\n"
              },
              "defaultConfiguration":{
                "level":"warning"
              },
              "properties":{
                "tags":[
                  "security"
                ],
                "problem":{
                  "severity":"medium"
                }
              },
              "helpUri":"https://snyk.io/security-rules/SNYK-CC-00024"
            },
            {
              "id":"SNYK-CC-00107",
              "name":"S3BucketIsPubliclyReadable",
              "shortDescription":{
                "text":"High severity - S3 bucket is publicly readable"
              },
              "fullDescription":{
                "text":"A bucket with a public ACL or bucket policy is exposed to the entire internet if all\nblock public access settings are disabled at the resource and account level. This\nposes a security vulnerability, as any AWS user or anonymous user can access the\ndata in the bucket.\n"
              },
              "help":{
                "text":"Remediation Steps\nEnsure that the https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket acl field does NOT contain EITHER of the following:&quot;public-read&quot;&quot;public-read-write&quot;Ensure that the grant block does NOT contain BOTH an invalid uri and permissions field:Invalid uri:&quot;http://acs.amazonaws.com/groups/global/AuthenticatedUsers&quot;&quot;http://acs.amazonaws.com/groups/global/AllUsers&quot;Invalid permissions:&quot;READ&quot;&quot;FULL_CONTROL&quot;&quot;READ_ACP&quot;If a bucket policy is defined in the bucket&#39;s policy field, ensure the JSON document does NOT contain BOTH an invalid principal, an invalid action, and an invalid effect:Invalid principals:&quot;Principal&quot;: { &quot;AWS&quot;: &quot;*&quot; }&quot;Principal&quot;: &quot;*&quot;Invalid actions:&quot;*&quot;&quot;s3:*&quot;&quot;s3:List*&quot;&quot;s3:Get*&quot;&quot;s3:ListBucket*&quot;&quot;s3:GetObject*&quot;&quot;s3:ListBucket&quot;&quot;s3:ListBucketVersions&quot;&quot;s3:ListBucketMultipartUploads&quot;&quot;s3:GetObject&quot;&quot;s3:GetObjectVersion&quot;&quot;s3:GetObjectTorrent&quot;Invalid effect:&quot;Effect&quot;: &quot;Allow&quot;If a bucket policy as defined as an https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy, ensure the JSON document in the policy field does NOT contain BOTH an invalid principal, an invalid action, and an invalid effect, as listed aboveWhile a https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block is not required for the bucket, it&#39;s highly recommended. Ensure the following https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block fields are all set to true:block_public_aclsblock_public_policyignore_public_aclsrestrict_public_bucketsYou can enable block public access settings for all buckets in your account by using a https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_account_public_access_block. Ensure the following fields are all set to true:block_public_aclsblock_public_policyignore_public_aclsrestrict_public_bucketsExample Configuration\n# Compliant ACL\nresource \"aws_s3_bucket\" \"b\" {\n  acl    = \"private\"\n  # other required fields here\n}# Compliant grant\nresource \"aws_s3_bucket\" \"bucket\" {\n  bucket = \"mybucket\"\n\n  grant {\n    id          = data.aws_canonical_user_id.current_user.id\n    type        = \"CanonicalUser\"\n    permissions = [\"FULL_CONTROL\"]\n  }\n\n  # other required fields here\n}# Compliant bucket policy\nresource \"aws_s3_bucket\" \"b\" {\n  bucket = \"my-tf-test-bucket\"\n  # other required fields here\n}\n\nresource \"aws_s3_bucket_policy\" \"b\" {\n  bucket = aws_s3_bucket.b.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Id      = \"MYBUCKETPOLICY\"\n    Statement = [\n      {\n        Sid       = \"IPAllow\"\n        Effect    = \"Deny\"\n        Principal = \"*\"\n        Action    = \"s3:*\"\n        Resource = [\n          aws_s3_bucket.b.arn,\n          \"${aws_s3_bucket.b.arn}/*\",\n        ]\n        Condition = {\n          NotIpAddress = {\n            \"aws:SourceIp\" = \"8.8.8.8/32\"\n          }\n        }\n      },\n    ]\n  })\n  \n  # other required fields here\n}# Compliant public access block - single bucket\nresource \"aws_s3_bucket\" \"b\" {\n  # other required fields here\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"private\" {\n  bucket                  = \"${aws_s3_bucket.b.id}\"\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}# Compliance public access block - ALL buckets\nresource \"aws_s3_account_public_access_block\" \"main\" {\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}References\nhttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_buckethttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#aclhttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#granthttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#policyhttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policyhttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy#policyhttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_blockhttps://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_account_public_access_block",
                "markdown":"# Remediation Steps\n\n* Ensure that the [aws_s3_bucket](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket) `acl` field does NOT contain EITHER of the following:\n\n  * \"public-read\"\n  * \"public-read-write\"\n\n* Ensure that the `grant` block does NOT contain BOTH an invalid `uri` and `permissions` field:\n\n  * Invalid `uri`:\n\n    * \"http://acs.amazonaws.com/groups/global/AuthenticatedUsers\"\n    * \"http://acs.amazonaws.com/groups/global/AllUsers\"\n\n  * Invalid `permissions`:\n    * \"READ\"\n    * \"FULL_CONTROL\"\n    * \"READ_ACP\"\n\n* If a bucket policy is defined in the bucket's `policy` field, ensure the JSON document does NOT contain BOTH an invalid principal, an invalid action, and an invalid effect:\n\n  * Invalid principals:\n\n    * `\"Principal\": { \"AWS\": \"*\" }`\n    * `\"Principal\": \"*\"`\n\n  * Invalid actions:\n\n    * `\"*\"`\n    * `\"s3:*\"`\n    * `\"s3:List*\"`\n    * `\"s3:Get*\"`\n    * `\"s3:ListBucket*\"`\n    * `\"s3:GetObject*\"`\n    * `\"s3:ListBucket\"`\n    * `\"s3:ListBucketVersions\"`\n    * `\"s3:ListBucketMultipartUploads\"`\n    * `\"s3:GetObject\"`\n    * `\"s3:GetObjectVersion\"`\n    * `\"s3:GetObjectTorrent\"`\n\n  * Invalid effect:\n\n    * `\"Effect\": \"Allow\"`\n\n* If a bucket policy as defined as an [aws_s3_bucket_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy), ensure the JSON document in the `policy` field does NOT contain BOTH an invalid principal, an invalid action, and an invalid effect, as listed above\n\n* While a [aws_s3_bucket_public_access_block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block) is not required for the bucket, it's highly recommended. Ensure the following [aws_s3_bucket_public_access_block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block) fields are all set to `true`:\n  * `block_public_acls`\n  * `block_public_policy`\n  * `ignore_public_acls`\n  * `restrict_public_buckets`\n\n* You can enable block public access settings for all buckets in your account by using a [aws_s3_account_public_access_block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_account_public_access_block). Ensure the following fields are all set to `true`:\n  * `block_public_acls`\n  * `block_public_policy`\n  * `ignore_public_acls`\n  * `restrict_public_buckets`\n\n#### Example Configuration\n\n```hcl\n# Compliant ACL\nresource \"aws_s3_bucket\" \"b\" {\n  acl    = \"private\"\n  # other required fields here\n}\n```\n\n```hcl\n# Compliant grant\nresource \"aws_s3_bucket\" \"bucket\" {\n  bucket = \"mybucket\"\n\n  grant {\n    id          = data.aws_canonical_user_id.current_user.id\n    type        = \"CanonicalUser\"\n    permissions = [\"FULL_CONTROL\"]\n  }\n\n  # other required fields here\n}\n```\n\n```hcl\n# Compliant bucket policy\nresource \"aws_s3_bucket\" \"b\" {\n  bucket = \"my-tf-test-bucket\"\n  # other required fields here\n}\n\nresource \"aws_s3_bucket_policy\" \"b\" {\n  bucket = aws_s3_bucket.b.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Id      = \"MYBUCKETPOLICY\"\n    Statement = [\n      {\n        Sid       = \"IPAllow\"\n        Effect    = \"Deny\"\n        Principal = \"*\"\n        Action    = \"s3:*\"\n        Resource = [\n          aws_s3_bucket.b.arn,\n          \"${aws_s3_bucket.b.arn}/*\",\n        ]\n        Condition = {\n          NotIpAddress = {\n            \"aws:SourceIp\" = \"8.8.8.8/32\"\n          }\n        }\n      },\n    ]\n  })\n  \n  # other required fields here\n}\n```\n\n```\n# Compliant public access block - single bucket\nresource \"aws_s3_bucket\" \"b\" {\n  # other required fields here\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"private\" {\n  bucket                  = \"${aws_s3_bucket.b.id}\"\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n```\n\n```\n# Compliance public access block - ALL buckets\nresource \"aws_s3_account_public_access_block\" \"main\" {\n  block_public_acls       = true\n  block_public_policy     = true\n  ignore_public_acls      = true\n  restrict_public_buckets = true\n}\n```\n\n# References\n\n* [Resource: aws_s3_bucket](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket)\n  * [Field: acl](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#acl)\n  * [Field: grant](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#grant)\n  * [Field: policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#policy)\n* [Resource: aws_s3_bucket_policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy)\n  * [Field: policy](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_policy#policy)\n* [Resource: aws_s3_bucket_public_access_block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block)\n* [Resource: aws_s3_account_public_access_block](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_account_public_access_block)\n"
              },
              "defaultConfiguration":{
                "level":"error"
              },
              "properties":{
                "tags":[
                  "security"
                ],
                "problem":{
                  "severity":"high"
                }
              },
              "helpUri":"https://snyk.io/security-rules/SNYK-CC-00107"
            }
          ]
        }
      },
      "automationDetails":{
        "id":"snyk-iac"
      },
      "results":[
        {
          "ruleId":"SNYK-CC-00024",
          "message":{
            "text":"This line contains a potential medium severity misconfiguration"
          },
          "locations":[
            {
              "physicalLocation":{
                "artifactLocation":{
                  "uri":"/Users/yairzohar/snyk/upe-test/default_vpc_security_group.tf",
                  "uriBaseId":"PROJECTROOT"
                },
                "region":{
                  "startLine":12
                }
              }
            }
          ]
        },
        {
          "ruleId":"SNYK-CC-00107",
          "message":{
            "text":"This line contains a potential high severity misconfiguration"
          },
          "locations":[
            {
              "physicalLocation":{
                "artifactLocation":{
                  "uri":"/Users/yairzohar/snyk/upe-test/s3_cis.tf",
                  "uriBaseId":"PROJECTROOT"
                },
                "region":{
                  "startLine":8
                }
              }
            }
          ]
        },
        {
          "ruleId":"SNYK-CC-00107",
          "message":{
            "text":"This line contains a potential high severity misconfiguration"
          },
          "locations":[
            {
              "physicalLocation":{
                "artifactLocation":{
                  "uri":"/Users/yairzohar/snyk/upe-test/s3_cis.tf",
                  "uriBaseId":"PROJECTROOT"
                },
                "region":{
                  "startLine":3
                }
              }
            }
          ]
        }
      ]
    }
  ]
}