{"ok":false,"vulnerabilities":[{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","connect@2.25.0","connect-timeout@1.2.2","ms@0.6.2"],"upgradePath":[false,false,"connect@2.29.0","connect-timeout@1.6.2","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","connect@2.25.0","debug@1.0.4","ms@0.6.2"],"upgradePath":[false,false,"connect@2.29.2","debug@2.2.0","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","express@3.16.0","debug@1.0.4","ms@0.6.2"],"upgradePath":[false,false,"express@3.20.3","debug@2.2.0","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","sails-hook-sockets@0.11.27","socket.io-client@1.3.7","engine.io-client@1.5.4","debug@1.0.4","ms@0.6.2"],"upgradePath":[false,false,false,false,"engine.io-client@1.6.0","debug@2.2.0","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","connect@2.25.0","serve-static@1.5.4","send@0.8.5","ms@0.6.2"],"upgradePath":[false,false,"connect@2.29.0","serve-static@1.9.3","send@0.12.3","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","express@3.16.0","send@0.8.1","ms@0.6.2"],"upgradePath":[false,false,"express@3.20.3","send@0.12.3","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","sails-hook-sockets@0.11.27","socket.io@1.3.7","debug@2.1.0","ms@0.6.2"],"upgradePath":[false,false,false,false,"debug@2.2.0","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","sails-hook-sockets@0.11.27","socket.io@1.3.7","engine.io@1.5.4","debug@1.0.3","ms@0.6.2"],"upgradePath":[false,false,false,false,"engine.io@1.6.0","debug@2.2.0","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.187z","modificationtime":"2015-11-06t02:09:36.187z","publicationTime":"2015-10-24t20:39:59.852z","description":"## overview\n\nthe [regular expression denial of service (redos)](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos) vulnerability exists in the `ms` package, affecting version 0.7.0 and below.\n\n## details\n\n`ms` is a milliseconds conversion utility, used to convert a time period string (i.e. `\"2 days\"`, `\"1h\"`) into milliseconds integer.\nthe regular expression used by the function to parse the time is vulnerable to a denial of service attack, where extremely long strings passed to `ms()` can take a long time to process, subsequently blocking the event loop for that extended period.\n\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade `ms` to version 0.7.1. \n\nif direct dependency upgrade is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/46\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<=0.7.0","unaffected":">0.7.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":46},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_0_0_48701f029417faf65e6f5e0b61a3cebe5436b07b.patch"],"version":"=0.7.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_1_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk.patch"],"version":"<0.7.0 >=0.6.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:1"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_2_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk2.patch"],"version":"<0.6.0 >0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:2"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_3_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk3.patch"],"version":"=0.3.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:3"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_4_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk4.patch"],"version":"=0.2.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:4"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/ms/20151024/ms_20151024_5_0_48701f029417faf65e6f5e0b61a3cebe5436b07b_snyk5.patch"],"version":"=0.1.0","modificationtime":"2015-10-24t20:39:59.852z","comments":[],"id":"patch:npm:ms:20151024:5"}],"moduleName":"ms","id":"npm:ms:20151024","from":["humpback@0.11.2","sails@0.11.3","sails-hook-sockets@0.11.27","socket.io@1.3.7","socket.io-adapter@0.3.1","debug@1.0.2","ms@0.6.2"],"upgradePath":[false,false,false,false,"socket.io-adapter@0.4.0","debug@2.2.0","ms@0.7.1"],"version":"0.6.2","name":"ms"},{"title":"qs denial-of-service memory exhaustion","credit":["dustin shiver"],"description":"## overview\nthe qs module has the ability to create sparse arrays during parsing. by specifying a high index it is possible to create a large array that will eventually take up all the allocated memory of the running process, resulting in a crash.\n\n_source: [node security project](https://nodesecurity.io/advisories/29)_\n\n## remediation\nupgrade qs to version 1.0.0 or greater.\n\n## references\n- https://nodesecurity.io/advisories/29\n- https://github.com/visionmedia/node-querystring/issues/104\n\n","semver":{"vulnerable":"<1.0.0","unaffected":">= 1.x"},"cvssv2":"5.0 (medium) (av:n/ac:l/au:n/c:n/i:n/a:p)","cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-400"],"cve":["cve-2014-7191"],"nsp":29},"patches":[],"moduleName":"qs","creationtime":"2014-08-06t06:10:22.000z","publicationTime":"2014-08-06t06:10:22.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:qs:20140806","from":["humpback@0.11.2","grunt-contrib-watch@0.5.3","tiny-lr@0.0.4","qs@0.5.6"],"upgradePath":[false,"grunt-contrib-watch@0.6.0"],"version":"0.5.6","name":"qs"},{"title":"qs denial-of-service extended event loop blocking","credit":["tom steele"],"description":"## overview\nthe qs module does not have an option or default for specifying object depth and, when parsing a string representing a deeply nested object, will block the event loop for long periods of time. an attacker could leverage this to cause a temporary denial-of-service condition, for example in a web application, other requests would not be processed while this blocking is occurring.\n\n_source: [node security project](https://nodesecurity.io/advisories/28)_\n\n## remediation\nupdate qs to version 1.0.0 or greater.\n\n## references\nhttps://nodesecurity.io/advisories/28\n","semver":{"vulnerable":"<1.0.0","unaffected":">= 1.x"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":28},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/qs/20140806-1/qs_20140806-1_0_0_snyk.patch"],"version":"<1.0.0 >=0.6.5","modificationtime":"2014-11-20t06:10:22.000z","comments":[],"id":"patch:npm:qs:20140806-1:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/qs/20140806-1/qs_20140806-1_0_1_snyk.patch"],"version":"=0.5.6","modificationtime":"2014-11-20t06:10:22.000z","comments":[],"id":"patch:npm:qs:20140806-1:1"}],"moduleName":"qs","creationtime":"2014-08-06t06:10:23.000z","publicationTime":"2014-08-06t06:10:23.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:qs:20140806-1","from":["humpback@0.11.2","grunt-contrib-watch@0.5.3","tiny-lr@0.0.4","qs@0.5.6"],"upgradePath":[false,"grunt-contrib-watch@0.6.0"],"version":"0.5.6","name":"qs"},{"title":"semver regular expression denial of service","credit":["adam baldwin"],"description":"## overview\n\nsemver is vulnerable to regular expression denial of service ([redos](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)) when extremely long version strings are parsed.\n\n_source: [node security project](https://nodesecurity.io/advisories/31)_\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1]\n\n## remediation\nupdate to a version 4.3.2 or greater. package version can no longer be more than 256 characters long. this prevents a situation in which parsing the version number can use exponentially more time and memory to parse, leading to a potential denial of service.\n\n## references\n- https://nodesecurity.io/advisories/31\n- [1] https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n- https://github.com/npm/npm/releases/tag/v2.7.5\n","semver":{"vulnerable":"<4.3.2","unaffected":">=4.3.2"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":31},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"],"version":"<4.3.2 >= 2.0.2","modificationtime":"2015-04-03t16:00:00.000z","comments":["https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"],"id":"patch:npm:semver:20150403:0"}],"moduleName":"semver","creationtime":"2015-04-03t16:00:00.000z","publicationTime":"2015-04-03t16:00:00.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:semver:20150403","from":["humpback@0.11.2","bower@1.7.0","semver@2.3.2"],"upgradePath":[false,false,"semver@4.3.2"],"version":"2.3.2","name":"semver"},{"title":"semver regular expression denial of service","credit":["adam baldwin"],"description":"## overview\n\nsemver is vulnerable to regular expression denial of service ([redos](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)) when extremely long version strings are parsed.\n\n_source: [node security project](https://nodesecurity.io/advisories/31)_\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1]\n\n## remediation\nupdate to a version 4.3.2 or greater. package version can no longer be more than 256 characters long. this prevents a situation in which parsing the version number can use exponentially more time and memory to parse, leading to a potential denial of service.\n\n## references\n- https://nodesecurity.io/advisories/31\n- [1] https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n- https://github.com/npm/npm/releases/tag/v2.7.5\n","semver":{"vulnerable":"<4.3.2","unaffected":">=4.3.2"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":31},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"],"version":"<4.3.2 >= 2.0.2","modificationtime":"2015-04-03t16:00:00.000z","comments":["https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"],"id":"patch:npm:semver:20150403:0"}],"moduleName":"semver","creationtime":"2015-04-03t16:00:00.000z","publicationTime":"2015-04-03t16:00:00.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:semver:20150403","from":["humpback@0.11.2","sails@0.11.3","semver@2.2.1"],"upgradePath":[false,false,"semver@4.3.2"],"version":"2.2.1","name":"semver"},{"title":"semver regular expression denial of service","credit":["adam baldwin"],"description":"## overview\n\nsemver is vulnerable to regular expression denial of service ([redos](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)) when extremely long version strings are parsed.\n\n_source: [node security project](https://nodesecurity.io/advisories/31)_\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1]\n\n## remediation\nupdate to a version 4.3.2 or greater. package version can no longer be more than 256 characters long. this prevents a situation in which parsing the version number can use exponentially more time and memory to parse, leading to a potential denial of service.\n\n## references\n- https://nodesecurity.io/advisories/31\n- [1] https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n- https://github.com/npm/npm/releases/tag/v2.7.5\n","semver":{"vulnerable":"<4.3.2","unaffected":">=4.3.2"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":31},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/semver/20150403/semver_20150403_0_0_c80180d8341a8ada0236815c29a2be59864afd70.patch"],"version":"<4.3.2 >= 2.0.2","modificationtime":"2015-04-03t16:00:00.000z","comments":["https://github.com/npm/node-semver/commit/c80180d8341a8ada0236815c29a2be59864afd70.patch"],"id":"patch:npm:semver:20150403:0"}],"moduleName":"semver","creationtime":"2015-04-03t16:00:00.000z","publicationTime":"2015-04-03t16:00:00.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:semver:20150403","from":["humpback@0.11.2","sails@0.11.3","express-handlebars@1.0.3","semver@3.0.1"],"upgradePath":[false,false,"express-handlebars@2.0.0"],"version":"3.0.1","name":"semver"},{"title":"send directory traversal","credit":["ilya kantor"],"description":"## overview\nwhen relying on the root option to restrict file access it may be possible for an application consumer to escape out of the restricted directory and access files in a similarly named directory. for example, `static(_dirname + '/public')` would allow access to `_dirname + '/public-restricted'`.\n\n_source: [node security project](https://nodesecurity.io/advisories/32)_\n\n## remediation\nupgrade to a version greater than or equal to 0.8.4.\n\n## references\n- https://nodesecurity.io/advisories/32\n- https://github.com/visionmedia/send/pull/59\n- https://github.com/visionmedia/send/commit/9c6ca9b2c0b880afd3ff91ce0d211213c5fa5f9a\n","semver":{"vulnerable":"< 0.8.4","unaffected":">= 0.8.4"},"cvssv3":"","severity":"high","identifiers":{"cwe":["cwe-23"],"cve":["cve-2014-6394"],"nsp":32},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/send/20140912/send_20140912_0_0_9c6ca9b2c0b880afd3ff91ce0d211213c5fa_snyk.patch"],"version":"< 0.8.4 >=0.7.3","modificationtime":"2014-09-12t05:06:33.000z","comments":[],"id":"patch:npm:send:20140912:0"}],"moduleName":"send","creationtime":"2014-09-12t05:06:33.000z","publicationTime":"2014-09-12t05:06:33.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:send:20140912","from":["humpback@0.11.2","sails@0.11.3","express@3.16.0","send@0.8.1"],"upgradePath":[false,false,"express@3.16.10","send@0.8.5"],"version":"0.8.1","name":"send"},{"title":"root path disclosure","credit":["dinis cruz"],"creationtime":"2015-11-06t02:09:36.183z","modificationtime":"2015-11-06t02:09:36.183z","publicationTime":"2015-11-03t07:12:20.676z","description":"## overview\n[send](https://www.npmjs.com/package/send) is a library for streaming files from the file system as an http response. it supports partial responses (ranges), conditional-get negotiation, high test coverage, and granular events which may be leveraged to take appropriate actions in your application or framework.\n\na root path disclosure vulnerability exists in `send` versions prior to 0.11.1.\n\n## remediation\nupgrade `send` to version 0.11.1. or greater. \n\nif a direct dependency update is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/56\n- https://github.com/pillarjs/send/pull/70\n- https://github.com/pillarjs/send/commit/98a5b89982b38e79db684177cf94730ce7fc7aed\n- https://github.com/expressjs/serve-static/blob/master/history.md#181--2015-01-20\n- http://expressjs.com/advanced/security-updates.html\n","semver":{"vulnerable":"<0.11.1","unaffected":">=0.11.1"},"cvssv3":"","severity":"medium","identifiers":{"cwe":[],"cve":[],"nsp":56},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/send/20151103/send_20151103_0_1_98a5b89982b38e79db684177cf94730ce7fc7aed.patch"],"version":"<0.11.1 >=0.9.0","modificationtime":"2015-11-03t07:12:20.676z","comments":["https://github.com/pillarjs/send/commit/98a5b89982b38e79db684177cf94730ce7fc7aed","https://github.com/dxa4481/send/commit/6adc607a908fb95892e39ca366222d8e2951a4a4"],"id":"patch:npm:send:20151103:0"}],"moduleName":"send","id":"npm:send:20151103","from":["humpback@0.11.2","sails@0.11.3","express@3.16.0","send@0.8.1"],"upgradePath":[false,false,"express@3.19.1","send@0.11.1"],"version":"0.8.1","name":"send"},{"title":"root path disclosure","credit":["dinis cruz"],"creationtime":"2015-11-06t02:09:36.183z","modificationtime":"2015-11-06t02:09:36.183z","publicationTime":"2015-11-03t07:12:20.676z","description":"## overview\n[send](https://www.npmjs.com/package/send) is a library for streaming files from the file system as an http response. it supports partial responses (ranges), conditional-get negotiation, high test coverage, and granular events which may be leveraged to take appropriate actions in your application or framework.\n\na root path disclosure vulnerability exists in `send` versions prior to 0.11.1.\n\n## remediation\nupgrade `send` to version 0.11.1. or greater. \n\nif a direct dependency update is not possible, use [snyk wizard](https://snyk.io/documentation/#wizard) to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/56\n- https://github.com/pillarjs/send/pull/70\n- https://github.com/pillarjs/send/commit/98a5b89982b38e79db684177cf94730ce7fc7aed\n- https://github.com/expressjs/serve-static/blob/master/history.md#181--2015-01-20\n- http://expressjs.com/advanced/security-updates.html\n","semver":{"vulnerable":"<0.11.1","unaffected":">=0.11.1"},"cvssv3":"","severity":"medium","identifiers":{"cwe":[],"cve":[],"nsp":56},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/send/20151103/send_20151103_0_1_98a5b89982b38e79db684177cf94730ce7fc7aed.patch"],"version":"<0.11.1 >=0.9.0","modificationtime":"2015-11-03t07:12:20.676z","comments":["https://github.com/pillarjs/send/commit/98a5b89982b38e79db684177cf94730ce7fc7aed","https://github.com/dxa4481/send/commit/6adc607a908fb95892e39ca366222d8e2951a4a4"],"id":"patch:npm:send:20151103:0"}],"moduleName":"send","id":"npm:send:20151103","from":["humpback@0.11.2","sails@0.11.3","connect@2.25.0","serve-static@1.5.4","send@0.8.5"],"upgradePath":[false,false,"connect@2.28.0","serve-static@1.8.1","send@0.11.1"],"version":"0.8.5","name":"send"},{"title":"file and directory names are not escaped and can lead to xss attacks","credit":["ivan kozik"],"description":"## overview\n\nwhen using serve-index middleware version < 1.6.3 file and directory names are not escaped in html output. if remote users can influence file or directory names, this can trigger a persistent xss attack.\n\n_source: [node security project](https://nodesecurity.io/advisories/34)_\n\n## remediation\n\nupgrade to version 1.6.3 or greater\n\n## references\n- https://nodesecurity.io/advisories/34\n- https://github.com/expressjs/serve-index/issues/28\n- https://www.owasp.org/index.php/cross-site_scripting_%28xss%29\n","semver":{"vulnerable":"<1.6.3","unaffected":">=1.6.3"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-80"],"cve":[],"nsp":34},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/serve-index/20150314/serve-index_20150314_0_0_0d135e710d717d7d9a3a3994f611214fb42e2191_snyk.patch"],"version":"<1.6.3 >1.5.1","modificationtime":"2015-03-13t23:24:28.000z","comments":[],"id":"patch:npm:serve-index:20150314:0"}],"moduleName":"serve-index","creationtime":"2015-03-13t23:24:28.000z","publicationTime":"2015-03-13t23:24:28.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:serve-index:20150314","from":["humpback@0.11.2","sails@0.11.3","connect@2.25.0","serve-index@1.1.6"],"upgradePath":[false,false,"connect@2.28.0","serve-index@1.6.3"],"version":"1.1.6","name":"serve-index"},{"title":"serve-static open redirect","credit":["pierre-Élie fauché"],"description":"## overview\n\nwhen using serve-static middleware version < 1.7.2 and it's configured to mount at the root, it creates an open redirect on the site.\n\n_source: [node security project](https://nodesecurity.io/advisories/35)_\n\n## details\n\nfor example:\n\nif a user visits `http://example.com//www.google.com/%2e%2e` they will be redirected to `//www.google.com/%2e%2e`, which some browsers interpret as `http://www.google.com/%2e%2e`.\n\n## remediation\n\n  * update to version 1.7.2 or greater (or 1.6.5 if sticking to the 1.6.x line).\n  * disable redirects if not using the feature with 'redirect: false' option and cannot upgrade.\n\n## references\n- https://nodesecurity.io/advisories/35\n- https://github.com/expressjs/serve-static/issues/26\n- https://www.owasp.org/index.php/open_redirect\n","semver":{"vulnerable":"<1.6.5 || >=1.7.0 <1.7.2","unaffected":"~1.6.5 || >=1.7.2"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-601"],"cve":["cve-2015-1164"],"nsp":35},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/serve-static/20150113/serve-static_20150113_0_0_0399e399935bab99530d6926094b4451438c2d50_snyk.patch"],"version":">=1.7.0 <1.7.2","modificationtime":"2015-01-13t12:50:48.000z","comments":[],"id":"patch:npm:serve-static:20150113:0"}],"moduleName":"serve-static","creationtime":"2015-01-13t12:50:48.000z","publicationTime":"2015-01-13t12:50:48.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:serve-static:20150113","from":["humpback@0.11.2","sails@0.11.3","connect@2.25.0","serve-static@1.5.4"],"upgradePath":[false,false,"connect@2.26.0","serve-static@1.6.5"],"version":"1.5.4","name":"serve-static"},{"title":"root path disclosure vulnerability in express.static","credit":[],"description":"## overview:\n\nroot path disclosure vulnerability in express.static, res.sendfile, and res.sendfile\n\n_original description taken from the [node security project](https://nodesecurity.io/)_\n\n## recommendations:\n\n  * update to version 1.8.1 or greater.\n\n## references:\n- http://expressjs.com/ja/advanced/security-updates.html\n- https://github.com/expressjs/serve-static/commit/30fe8b1596e8879923610c0421598669c39aecc2\n- https://github.com/expressjs/serve-static/blob/master/history.md#181--2015-01-20\n","semver":{"vulnerable":"<1.8.1","unaffected":">=1.8.1"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-211"],"cve":[],"nsp":""},"patches":[],"moduleName":"serve-static","creationtime":"2015-01-20t04:46:45.000z","publicationTime":"2015-01-20t04:46:45.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:serve-static:20150120","from":["humpback@0.11.2","sails@0.11.3","connect@2.25.0","serve-static@1.5.4"],"upgradePath":[false,false,"connect@2.28.0","serve-static@1.8.1"],"version":"1.5.4","name":"serve-static"},{"title":"uglify-js incorrectly handles non-boolean comparisons during minification","credit":["tom macwright"],"description":"## overview\n[tom macwright](https://github.com/mishoo/uglifyjs2/issues/751) discovered that uglifyjs versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted javascript file to have altered functionality after minification. this bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\n\n_source: [node security project](https://nodesecurity.io/advisories/39)_\n\n\n### details\n\nin boolean algebra, demorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\nin javascript form, they state that:\n !(a && b) === (!a) || (!b)\n !(a || b) === (!a) && (!b)\n\nthe law does not hold true when one of the values is not a boolean however.\n\nvulnerable versions of uglifyjs do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\n\nconsider this authentication function:\n\n```\nfunction istokenvalid(user) {\n    var timeleft =\n        !!config && // config object exists\n        !!user.token && // user object has a token\n        !user.token.invalidated && // token is not explicitly invalidated\n        !config.uninitialized && // config is initialized\n        !config.ignoretimestamps && // don't ignore timestamps\n        gettimeleft(user.token.expiry); // > 0 if expiration is in the future\n\n    // the token must not be expired\n    return timeleft > 0;\n}\n\nfunction gettimeleft(expiry) {\n  return expiry - getsystemtime();\n}\n```\nwhen minified with a vulnerable version of uglifyjs, it will produce the following insecure output, where a token will never expire:\n\n( formatted for readability )\n\n```\nfunction istokenvalid(user) {\n    var timeleft = !(                       // negation\n        !config                             // config object does not exist\n        || !user.token                      // user object does not have a token\n        || user.token.invalidated           // token is explicitly invalidated\n        || config.uninitialized             // config isn't initialized\n        || config.ignoretimestamps          // ignore timestamps\n        || !gettimeleft(user.token.expiry)  // > 0 if expiration is in the future\n    );\n    return timeleft > 0\n}\n\nfunction gettimeleft(expiry) {\n    return expiry - getsystemtime()\n}\n```\n\n## remediation\n\nupgrade uglifyjs to version >= 2.4.24.\n\n## references\n- https://nodesecurity.io/advisories/39\n- https://github.com/tmcw/mdast-uglify-bug\n- https://zyan.scripts.mit.edu/blog/backdooring-js/\n- https://github.com/mishoo/uglifyjs2/issues/751\n","semver":{"vulnerable":"<= 2.4.23","unaffected":">= 2.4.24"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-95"],"cve":[],"nsp":39},"patches":[],"moduleName":"uglify-js","creationtime":"2015-08-24t09:29:10.000z","publicationTime":"2015-08-24t09:29:10.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:uglify-js:20150824","from":["humpback@0.11.2","bower@1.7.0","handlebars@2.0.0","uglify-js@2.3.6"],"upgradePath":[false,false,"handlebars@4.0.0","uglify-js@2.4.24"],"version":"2.3.6","name":"uglify-js"},{"title":"uglify-js incorrectly handles non-boolean comparisons during minification","credit":["tom macwright"],"description":"## overview\n[tom macwright](https://github.com/mishoo/uglifyjs2/issues/751) discovered that uglifyjs versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted javascript file to have altered functionality after minification. this bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\n\n_source: [node security project](https://nodesecurity.io/advisories/39)_\n\n\n### details\n\nin boolean algebra, demorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\nin javascript form, they state that:\n !(a && b) === (!a) || (!b)\n !(a || b) === (!a) && (!b)\n\nthe law does not hold true when one of the values is not a boolean however.\n\nvulnerable versions of uglifyjs do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\n\nconsider this authentication function:\n\n```\nfunction istokenvalid(user) {\n    var timeleft =\n        !!config && // config object exists\n        !!user.token && // user object has a token\n        !user.token.invalidated && // token is not explicitly invalidated\n        !config.uninitialized && // config is initialized\n        !config.ignoretimestamps && // don't ignore timestamps\n        gettimeleft(user.token.expiry); // > 0 if expiration is in the future\n\n    // the token must not be expired\n    return timeleft > 0;\n}\n\nfunction gettimeleft(expiry) {\n  return expiry - getsystemtime();\n}\n```\nwhen minified with a vulnerable version of uglifyjs, it will produce the following insecure output, where a token will never expire:\n\n( formatted for readability )\n\n```\nfunction istokenvalid(user) {\n    var timeleft = !(                       // negation\n        !config                             // config object does not exist\n        || !user.token                      // user object does not have a token\n        || user.token.invalidated           // token is explicitly invalidated\n        || config.uninitialized             // config isn't initialized\n        || config.ignoretimestamps          // ignore timestamps\n        || !gettimeleft(user.token.expiry)  // > 0 if expiration is in the future\n    );\n    return timeleft > 0\n}\n\nfunction gettimeleft(expiry) {\n    return expiry - getsystemtime()\n}\n```\n\n## remediation\n\nupgrade uglifyjs to version >= 2.4.24.\n\n## references\n- https://nodesecurity.io/advisories/39\n- https://github.com/tmcw/mdast-uglify-bug\n- https://zyan.scripts.mit.edu/blog/backdooring-js/\n- https://github.com/mishoo/uglifyjs2/issues/751\n","semver":{"vulnerable":"<= 2.4.23","unaffected":">= 2.4.24"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-95"],"cve":[],"nsp":39},"patches":[],"moduleName":"uglify-js","creationtime":"2015-08-24t09:29:10.000z","publicationTime":"2015-08-24t09:29:10.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:uglify-js:20150824","from":["humpback@0.11.2","sails@0.11.3","express-handlebars@1.0.3","handlebars@2.0.0","uglify-js@2.3.6"],"upgradePath":[false,false,false,"handlebars@4.0.0","uglify-js@2.4.24"],"version":"2.3.6","name":"uglify-js"},{"title":"uglify-js incorrectly handles non-boolean comparisons during minification","credit":["tom macwright"],"description":"## overview\n[tom macwright](https://github.com/mishoo/uglifyjs2/issues/751) discovered that uglifyjs versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted javascript file to have altered functionality after minification. this bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\n\n_source: [node security project](https://nodesecurity.io/advisories/39)_\n\n\n### details\n\nin boolean algebra, demorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\nin javascript form, they state that:\n !(a && b) === (!a) || (!b)\n !(a || b) === (!a) && (!b)\n\nthe law does not hold true when one of the values is not a boolean however.\n\nvulnerable versions of uglifyjs do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\n\nconsider this authentication function:\n\n```\nfunction istokenvalid(user) {\n    var timeleft =\n        !!config && // config object exists\n        !!user.token && // user object has a token\n        !user.token.invalidated && // token is not explicitly invalidated\n        !config.uninitialized && // config is initialized\n        !config.ignoretimestamps && // don't ignore timestamps\n        gettimeleft(user.token.expiry); // > 0 if expiration is in the future\n\n    // the token must not be expired\n    return timeleft > 0;\n}\n\nfunction gettimeleft(expiry) {\n  return expiry - getsystemtime();\n}\n```\nwhen minified with a vulnerable version of uglifyjs, it will produce the following insecure output, where a token will never expire:\n\n( formatted for readability )\n\n```\nfunction istokenvalid(user) {\n    var timeleft = !(                       // negation\n        !config                             // config object does not exist\n        || !user.token                      // user object does not have a token\n        || user.token.invalidated           // token is explicitly invalidated\n        || config.uninitialized             // config isn't initialized\n        || config.ignoretimestamps          // ignore timestamps\n        || !gettimeleft(user.token.expiry)  // > 0 if expiration is in the future\n    );\n    return timeleft > 0\n}\n\nfunction gettimeleft(expiry) {\n    return expiry - getsystemtime()\n}\n```\n\n## remediation\n\nupgrade uglifyjs to version >= 2.4.24.\n\n## references\n- https://nodesecurity.io/advisories/39\n- https://github.com/tmcw/mdast-uglify-bug\n- https://zyan.scripts.mit.edu/blog/backdooring-js/\n- https://github.com/mishoo/uglifyjs2/issues/751\n","semver":{"vulnerable":"<= 2.4.23","unaffected":">= 2.4.24"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-95"],"cve":[],"nsp":39},"patches":[],"moduleName":"uglify-js","creationtime":"2015-08-24t09:29:10.000z","publicationTime":"2015-08-24t09:29:10.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:uglify-js:20150824","from":["humpback@0.11.2","grunt-html2js@0.3.5","jade@1.11.0","transformers@2.1.0","uglify-js@2.2.5"],"upgradePath":[false,false,false,"transformers@3.1.0","uglify-js@2.4.24"],"version":"2.2.5","name":"uglify-js"},{"title":"uglify-js incorrectly handles non-boolean comparisons during minification","credit":["tom macwright"],"description":"## overview\n[tom macwright](https://github.com/mishoo/uglifyjs2/issues/751) discovered that uglifyjs versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted javascript file to have altered functionality after minification. this bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\n\n_source: [node security project](https://nodesecurity.io/advisories/39)_\n\n\n### details\n\nin boolean algebra, demorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\nin javascript form, they state that:\n !(a && b) === (!a) || (!b)\n !(a || b) === (!a) && (!b)\n\nthe law does not hold true when one of the values is not a boolean however.\n\nvulnerable versions of uglifyjs do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\n\nconsider this authentication function:\n\n```\nfunction istokenvalid(user) {\n    var timeleft =\n        !!config && // config object exists\n        !!user.token && // user object has a token\n        !user.token.invalidated && // token is not explicitly invalidated\n        !config.uninitialized && // config is initialized\n        !config.ignoretimestamps && // don't ignore timestamps\n        gettimeleft(user.token.expiry); // > 0 if expiration is in the future\n\n    // the token must not be expired\n    return timeleft > 0;\n}\n\nfunction gettimeleft(expiry) {\n  return expiry - getsystemtime();\n}\n```\nwhen minified with a vulnerable version of uglifyjs, it will produce the following insecure output, where a token will never expire:\n\n( formatted for readability )\n\n```\nfunction istokenvalid(user) {\n    var timeleft = !(                       // negation\n        !config                             // config object does not exist\n        || !user.token                      // user object does not have a token\n        || user.token.invalidated           // token is explicitly invalidated\n        || config.uninitialized             // config isn't initialized\n        || config.ignoretimestamps          // ignore timestamps\n        || !gettimeleft(user.token.expiry)  // > 0 if expiration is in the future\n    );\n    return timeleft > 0\n}\n\nfunction gettimeleft(expiry) {\n    return expiry - getsystemtime()\n}\n```\n\n## remediation\n\nupgrade uglifyjs to version >= 2.4.24.\n\n## references\n- https://nodesecurity.io/advisories/39\n- https://github.com/tmcw/mdast-uglify-bug\n- https://zyan.scripts.mit.edu/blog/backdooring-js/\n- https://github.com/mishoo/uglifyjs2/issues/751\n","semver":{"vulnerable":"<= 2.4.23","unaffected":">= 2.4.24"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-95"],"cve":[],"nsp":39},"patches":[],"moduleName":"uglify-js","creationtime":"2015-08-24t09:29:10.000z","publicationTime":"2015-08-24t09:29:10.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:uglify-js:20150824","from":["humpback@0.11.2","kue@0.9.6","jade@1.1.5","transformers@2.1.0","uglify-js@2.2.5"],"upgradePath":[false,false,false,"transformers@3.1.0","uglify-js@2.4.24"],"version":"2.2.5","name":"uglify-js"},{"title":"uglify-js incorrectly handles non-boolean comparisons during minification","credit":["tom macwright"],"description":"## overview\n[tom macwright](https://github.com/mishoo/uglifyjs2/issues/751) discovered that uglifyjs versions 2.4.23 and earlier are affected by a vulnerability which allows a specially crafted javascript file to have altered functionality after minification. this bug was [demonstrated](https://zyan.scripts.mit.edu/blog/backdooring-js/) by [yan](https://twitter.com/bcrypt) to allow potentially malicious code to be hidden within secure code, activated by minification.\n\n_source: [node security project](https://nodesecurity.io/advisories/39)_\n\n\n### details\n\nin boolean algebra, demorgan's laws describe the relationships between conjunctions ( && ), disjunctions ( || ) and negations ( ! ).\nin javascript form, they state that:\n !(a && b) === (!a) || (!b)\n !(a || b) === (!a) && (!b)\n\nthe law does not hold true when one of the values is not a boolean however.\n\nvulnerable versions of uglifyjs do not account for this restriction, and erroneously apply the laws to a statement if it can be reduced in length by it.\n\nconsider this authentication function:\n\n```\nfunction istokenvalid(user) {\n    var timeleft =\n        !!config && // config object exists\n        !!user.token && // user object has a token\n        !user.token.invalidated && // token is not explicitly invalidated\n        !config.uninitialized && // config is initialized\n        !config.ignoretimestamps && // don't ignore timestamps\n        gettimeleft(user.token.expiry); // > 0 if expiration is in the future\n\n    // the token must not be expired\n    return timeleft > 0;\n}\n\nfunction gettimeleft(expiry) {\n  return expiry - getsystemtime();\n}\n```\nwhen minified with a vulnerable version of uglifyjs, it will produce the following insecure output, where a token will never expire:\n\n( formatted for readability )\n\n```\nfunction istokenvalid(user) {\n    var timeleft = !(                       // negation\n        !config                             // config object does not exist\n        || !user.token                      // user object does not have a token\n        || user.token.invalidated           // token is explicitly invalidated\n        || config.uninitialized             // config isn't initialized\n        || config.ignoretimestamps          // ignore timestamps\n        || !gettimeleft(user.token.expiry)  // > 0 if expiration is in the future\n    );\n    return timeleft > 0\n}\n\nfunction gettimeleft(expiry) {\n    return expiry - getsystemtime()\n}\n```\n\n## remediation\n\nupgrade uglifyjs to version >= 2.4.24.\n\n## references\n- https://nodesecurity.io/advisories/39\n- https://github.com/tmcw/mdast-uglify-bug\n- https://zyan.scripts.mit.edu/blog/backdooring-js/\n- https://github.com/mishoo/uglifyjs2/issues/751\n","semver":{"vulnerable":"<= 2.4.23","unaffected":">= 2.4.24"},"cvssv3":"","severity":"medium","identifiers":{"cwe":["cwe-95"],"cve":[],"nsp":39},"patches":[],"moduleName":"uglify-js","creationtime":"2015-08-24t09:29:10.000z","publicationTime":"2015-08-24t09:29:10.000z","modificationtime":"2015-11-06t02:09:36.180z","id":"npm:uglify-js:20150824","from":["humpback@0.11.2","kue@0.9.6","jade@1.1.5","with@2.0.0","uglify-js@2.4.0"],"upgradePath":["humpback@0.11.2"],"version":"2.4.0","name":"uglify-js"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.186z","modificationtime":"2015-11-06t02:09:36.186z","publicationTime":"2015-10-24t21:01:32.155z","description":"## overview\nthe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (redos) attacks when long inputs of certain patters are processed.\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade to version 2.6.0 or greater. \nif a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<2.6.0","unaffected":">=2.6.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":48},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"],"version":"<= 2.4.23 >=2.2.0","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"],"version":"<2.6.0 >2.4.23","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:1"}],"moduleName":"uglify-js","id":"npm:uglify-js:20151024","from":["humpback@0.11.2","bower@1.7.0","handlebars@2.0.0","uglify-js@2.3.6"],"upgradePath":[false,false,"handlebars@4.0.5","uglify-js@2.6.0"],"version":"2.3.6","name":"uglify-js"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.186z","modificationtime":"2015-11-06t02:09:36.186z","publicationTime":"2015-10-24t21:01:32.155z","description":"## overview\nthe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (redos) attacks when long inputs of certain patters are processed.\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade to version 2.6.0 or greater. \nif a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<2.6.0","unaffected":">=2.6.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":48},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"],"version":"<= 2.4.23 >=2.2.0","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"],"version":"<2.6.0 >2.4.23","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:1"}],"moduleName":"uglify-js","id":"npm:uglify-js:20151024","from":["humpback@0.11.2","sails@0.11.3","express-handlebars@1.0.3","handlebars@2.0.0","uglify-js@2.3.6"],"upgradePath":[false,false,false,"handlebars@4.0.5","uglify-js@2.6.0"],"version":"2.3.6","name":"uglify-js"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.186z","modificationtime":"2015-11-06t02:09:36.186z","publicationTime":"2015-10-24t21:01:32.155z","description":"## overview\nthe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (redos) attacks when long inputs of certain patters are processed.\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade to version 2.6.0 or greater. \nif a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<2.6.0","unaffected":">=2.6.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":48},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"],"version":"<= 2.4.23 >=2.2.0","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"],"version":"<2.6.0 >2.4.23","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:1"}],"moduleName":"uglify-js","id":"npm:uglify-js:20151024","from":["humpback@0.11.2","grunt-html2js@0.3.5","html-minifier@0.6.9","uglify-js@2.4.24"],"upgradePath":[false,false,false,"uglify-js@2.6.0"],"version":"2.4.24","name":"uglify-js"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.186z","modificationtime":"2015-11-06t02:09:36.186z","publicationTime":"2015-10-24t21:01:32.155z","description":"## overview\nthe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (redos) attacks when long inputs of certain patters are processed.\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade to version 2.6.0 or greater. \nif a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<2.6.0","unaffected":">=2.6.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":48},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"],"version":"<= 2.4.23 >=2.2.0","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"],"version":"<2.6.0 >2.4.23","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:1"}],"moduleName":"uglify-js","id":"npm:uglify-js:20151024","from":["humpback@0.11.2","kue@0.9.6","jade@1.1.5","constantinople@1.0.2","uglify-js@2.4.24"],"upgradePath":[false,false,false,"constantinople@3.0.0"],"version":"2.4.24","name":"uglify-js"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.186z","modificationtime":"2015-11-06t02:09:36.186z","publicationTime":"2015-10-24t21:01:32.155z","description":"## overview\nthe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (redos) attacks when long inputs of certain patters are processed.\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade to version 2.6.0 or greater. \nif a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<2.6.0","unaffected":">=2.6.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":48},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"],"version":"<= 2.4.23 >=2.2.0","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"],"version":"<2.6.0 >2.4.23","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:1"}],"moduleName":"uglify-js","id":"npm:uglify-js:20151024","from":["humpback@0.11.2","grunt-html2js@0.3.5","jade@1.11.0","transformers@2.1.0","uglify-js@2.2.5"],"upgradePath":[false,false,false,false,"uglify-js@2.6.0"],"version":"2.2.5","name":"uglify-js"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.186z","modificationtime":"2015-11-06t02:09:36.186z","publicationTime":"2015-10-24t21:01:32.155z","description":"## overview\nthe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (redos) attacks when long inputs of certain patters are processed.\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade to version 2.6.0 or greater. \nif a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<2.6.0","unaffected":">=2.6.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":48},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"],"version":"<= 2.4.23 >=2.2.0","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"],"version":"<2.6.0 >2.4.23","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:1"}],"moduleName":"uglify-js","id":"npm:uglify-js:20151024","from":["humpback@0.11.2","kue@0.9.6","jade@1.1.5","transformers@2.1.0","uglify-js@2.2.5"],"upgradePath":[false,false,false,false,"uglify-js@2.6.0"],"version":"2.2.5","name":"uglify-js"},{"title":"regular expression denial of service","credit":["adam baldwin"],"creationtime":"2015-11-06t02:09:36.186z","modificationtime":"2015-11-06t02:09:36.186z","publicationTime":"2015-10-24t21:01:32.155z","description":"## overview\nthe `parse()` function in the [`uglify-js`](https://www.npmjs.com/package/uglify-js) package prior to version 2.6.0 is vulnerable to regular expression denial of service (redos) attacks when long inputs of certain patters are processed.\n\n## details\n\"the regular expression denial of service (redos) is a denial of service attack, that exploits the fact that most regular expression implementations may reach extreme situations that cause them to work very slowly (exponentially related to input size). an attacker can then cause a program using a regular expression to enter these extreme situations and then hang for a very long time.\" [1](https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos)\n\n## remediation\nupgrade to version 2.6.0 or greater. \nif a direct dependency update is not possible, use `snyk wizard` to patch this vulnerability.\n\n## references\n- https://nodesecurity.io/advisories/48\n- https://www.owasp.org/index.php/regular_expression_denial_of_service_-_redos\n","semver":{"vulnerable":"<2.6.0","unaffected":">=2.6.0"},"cvssv3":"","severity":"low","identifiers":{"cwe":["cwe-400"],"cve":[],"nsp":48},"patches":[{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk_inc.patch"],"version":"<= 2.4.23 >=2.2.0","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:0"},{"urls":["https://snyk-patches.s3.amazonaws.com/npm/uglify-js/20151024/uglify-js_20151024_0_0_63d35f8_snyk.patch"],"version":"<2.6.0 >2.4.23","modificationtime":"2015-11-16t09:29:10.000z","comments":["https://github.com/mishoo/uglifyjs2/commit/63d35f8.patch"],"id":"patch:npm:uglify-js:20151024:1"}],"moduleName":"uglify-js","id":"npm:uglify-js:20151024","from":["humpback@0.11.2","kue@0.9.6","jade@1.1.5","with@2.0.0","uglify-js@2.4.0"],"upgradePath":["humpback@0.11.2"],"version":"2.4.0","name":"uglify-js"}],"dependencycount":1572}