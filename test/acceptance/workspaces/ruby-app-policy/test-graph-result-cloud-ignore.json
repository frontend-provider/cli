{
  "result": {
    "affectedPkgs": {
      "lynx@0.4.0": {
        "pkg": {
          "name": "lynx",
          "version": "0.4.0"
        },
        "issues": {
          "SNYK-RUBY-LYNX-20160": {
            "issueId": "SNYK-RUBY-LYNX-20160",
            "fixInfo": {
              "isPatchable": false,
              "upgradePaths": []
            }
          },
          "SNYK-RUBY-LYNX-20161": {
            "issueId": "SNYK-RUBY-LYNX-20161",
            "fixInfo": {
              "isPatchable": false,
              "upgradePaths": []
            }
          }
        }
      },
      "nokogiri@1.8.5": {
        "pkg": {
          "name": "nokogiri",
          "version": "1.8.5"
        },
        "issues": {
          "SNYK-RUBY-NOKOGIRI-20299": {
            "issueId": "SNYK-RUBY-NOKOGIRI-20299",
            "fixInfo": {
              "isPatchable": false,
              "upgradePaths": []
            }
          }
        }
      },
      "sanitize@4.6.2": {
        "pkg": {
          "name": "sanitize",
          "version": "4.6.2"
        },
        "issues": {
          "SNYK-RUBY-SANITIZE-22024": {
            "issueId": "SNYK-RUBY-SANITIZE-22024",
            "fixInfo": {
              "isPatchable": false,
              "upgradePaths": [
                {
                  "path": [
                    {
                      "name": "ruby-app-policy",
                      "version": null
                    },
                    {
                      "name": "sanitize",
                      "version": "4.6.2",
                      "newVersion": "4.6.3"
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "yard@0.8.0": {
        "pkg": {
          "name": "yard",
          "version": "0.8.0"
        },
        "issues": {
          "SNYK-RUBY-YARD-20430": {
            "issueId": "SNYK-RUBY-YARD-20430",
            "fixInfo": {
              "isPatchable": false,
              "upgradePaths": [
                {
                  "path": [
                    {
                      "name": "ruby-app-policy",
                      "version": null
                    },
                    {
                      "name": "yard",
                      "version": "0.8.0",
                      "newVersion": "0.8.7.1"
                    }
                  ]
                }
              ]
            }
          },
          "SNYK-RUBY-YARD-22004": {
            "issueId": "SNYK-RUBY-YARD-22004",
            "fixInfo": {
              "isPatchable": false,
              "upgradePaths": [
                {
                  "path": [
                    {
                      "name": "ruby-app-policy",
                      "version": null
                    },
                    {
                      "name": "yard",
                      "version": "0.8.0",
                      "newVersion": "0.9.11"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "issuesData": {
      "SNYK-RUBY-LYNX-20160": {
        "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "alternativeIds": [],
        "creationTime": "2016-09-21T12:36:57Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 5.6,
        "description": "## Overview\n[`lynx`](https://rubygems.org/gems/lynx) is a command line wrapper for MySQL.\nAffected versions of this gem are vulnerable to arbitrary command executions due to a flaw in `lib/lynx/pipe/run.rb`.\n\n## References\n- http://rubysec.com/advisories/OSVDB-108579\n",
        "disclosureTime": "2014-06-29T21:00:00Z",
        "functions": [],
        "id": "SNYK-RUBY-LYNX-20160",
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-77"
          ],
          "OSVDB": [
            "OSVDB-108579"
          ]
        },
        "language": "ruby",
        "methods": [],
        "modificationTime": "2018-11-18T11:50:42.661168Z",
        "moduleName": "lynx",
        "packageManager": "rubygems",
        "packageName": "lynx",
        "patches": [],
        "publicationTime": "2014-06-29T21:00:00Z",
        "references": [
          {
            "title": "RUBYSEC.COM",
            "url": "http://rubysec.com/advisories/OSVDB-108579"
          }
        ],
        "semver": {
          "vulnerable": [
            ">= 0"
          ]
        },
        "severity": "high",
        "title": "Arbitrary Command Execution"
      },
      "SNYK-RUBY-LYNX-20161": {
        "CVSSv3": "CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2016-09-21T12:36:57Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 4,
        "description": "## Overview\n[`lynx`](https://rubygems.org/gems/lynx) is a command line wrapper for MySQL.\nAffected versions of this gem are vulnerable due to a flaw in `command/basic.rb` that exposes password information in plaintext in the process table. This may allow a local attacker to gain access to password information.\n\n## References\n- http://rubysec.com/advisories/CVE-2014-5002\n",
        "disclosureTime": "2014-06-29T21:00:00Z",
        "functions": [],
        "id": "SNYK-RUBY-LYNX-20161",
        "identifiers": {
          "CVE": [
            "CVE-2014-5002"
          ],
          "CWE": [
            "CWE-200"
          ],
          "OSVDB": [
            "OSVDB-108580"
          ]
        },
        "language": "ruby",
        "methods": [],
        "modificationTime": "2018-11-18T11:50:42.664828Z",
        "moduleName": "lynx",
        "packageManager": "rubygems",
        "packageName": "lynx",
        "patches": [],
        "publicationTime": "2014-06-29T21:00:00Z",
        "references": [
          {
            "title": "RUBYSEC.COM",
            "url": "http://rubysec.com/advisories/CVE-2014-5002"
          }
        ],
        "semver": {
          "vulnerable": [
            ">= 0"
          ]
        },
        "severity": "medium",
        "title": "Local Plaintext Password Disclosure"
      },
      "SNYK-RUBY-NOKOGIRI-20299": {
        "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "alternativeIds": [],
        "creationTime": "2017-01-12T12:37:00Z",
        "credit": [
          "Snyk Security Research Team"
        ],
        "cvssScore": 7.3,
        "description": "## Overview\n[nokogiri](https://rubygems.org/gems/nokogiri) is an HTML, XML, SAX, and Reader parser, with the ability to search documents via XPath or CSS3 selectors.\n\nAffected versions of this Gem are vulnerable to XML External Entity (XXE) attacks when opting into the `DTDLOAD` option and opting out of the `NONET` option.\n`Nokogiri` is affected by series of vulnerabilities in libxml2 and libxslt, which are libraries it depends on. When handling the expansion of XML external entities (XXE) in libxml2, you can specify documents to be read. Opting into the `DTDLOAD` option and opting out of the `NONET` option in `Nokogiri` allows unknown documents to be loaded from the network. This can be used by attackers to load specially crafted XML documents on an internal XML parsing service and may lead to unauthorized disclosure of potentially sensitive information.\n\n**Note:** This vulnerability exists also in versions `< 1.5.4` regardless of the options opted into or out of. See information [here](https://snyk.io/vuln/SNYK-RUBY-NOKOGIRI-20298)\n\n## Details\n\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nNokogiri suggests not to opt-out of `NONET` unless only trusted documents are being parsed.\nThere currently is no fix in libxml2 as of September 17th, 2017.\n`Nokogiri` will be waiting for a fix upstream to update.\n\n## Disclosure Timeline\n- January 11th, 2017 - Reported the issue to [Mike Dalessio](https://github.com/flavorjones) of Nokogiri Core.\n- January 11th, 2017 - Issue triaged and acknowledged by [Mike Dalessio](https://github.com/flavorjones) of Nokogiri Core.\n\n## References\n- [GitHub Issue](https://github.com/sparklemotion/nokogiri/issues/1582)\n- [CVE-2016-9318](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9318)\n",
        "disclosureTime": "2017-01-11T21:00:00Z",
        "functions": [],
        "id": "SNYK-RUBY-NOKOGIRI-20299",
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-611"
          ]
        },
        "language": "ruby",
        "methods": [],
        "modificationTime": "2018-11-22T10:10:06.539065Z",
        "moduleName": "nokogiri",
        "packageManager": "rubygems",
        "packageName": "nokogiri",
        "patches": [],
        "publicationTime": "2017-01-16T21:00:00Z",
        "references": [
          {
            "title": "CVE-2016-9318",
            "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-9318"
          },
          {
            "title": "GitHub Issue",
            "url": "https://github.com/sparklemotion/nokogiri/issues/1582"
          }
        ],
        "semver": {
          "vulnerable": [
            ">= 1.5.4"
          ]
        },
        "severity": "high",
        "title": "XML External Entity (XXE) Injection"
      },
      "SNYK-RUBY-SANITIZE-22024": {
        "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2018-03-20T04:43:57.565000Z",
        "credit": [
          "Shopify Application Security Team"
        ],
        "cvssScore": 6.5,
        "description": "## Overview\n[sanitize](https://rubygems.org/gems/sanitize) is a whitelist-based HTML and CSS sanitizer.\n\nWhen used in combination with libxml2 versions >= 2.9.2, a specially crafted HTML fragment can cause libxml2 to generate improperly escaped output, allowing non-whitelisted attributes to be used on whitelisted elements. This can allow HTML and JavaScript injection, which could result in XSS if Sanitize's output is served to browsers.\n\n## Timeline\n* 2018-03-19: Reported by Shopify Application Security Team via email\n* 2018-03-19: Sanitize 4.6.3 released with a fix\n* 2018-03-19: Initial vulnerability report published\n\n## Remediation\nUpgrade `sanitize` to version 4.6.3 or higher.\n\n## References\n- [GitHub Issue](https://github.com/rgrove/sanitize/issues/176)\n",
        "disclosureTime": "2018-03-19T04:43:57.565000Z",
        "functions": [],
        "id": "SNYK-RUBY-SANITIZE-22024",
        "identifiers": {
          "CVE": [
            "CVE-2018-3740"
          ],
          "CWE": [
            "CWE-74"
          ]
        },
        "language": "ruby",
        "methods": [],
        "modificationTime": "2018-11-18T11:50:43.461685Z",
        "moduleName": "sanitize",
        "packageManager": "rubygems",
        "packageName": "sanitize",
        "patches": [],
        "publicationTime": "2018-03-21T09:26:19.783000Z",
        "references": [
          {
            "title": "GitHub Issue",
            "url": "https://github.com/rgrove/sanitize/issues/176"
          }
        ],
        "semver": {
          "vulnerable": [
            "<4.6.3"
          ]
        },
        "severity": "medium",
        "title": "HTML Injection"
      },
      "SNYK-RUBY-YARD-20430": {
        "CVSSv3": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2017-05-04T11:52:51.329000Z",
        "credit": [
          "Loren Segal"
        ],
        "cvssScore": 3.1,
        "description": "## Overview\n[`yard`](https://rubygems.org/gems/yard) is a documentation generation tool for the Ruby programming language.\n\nAffected versions of the package are vulnerable to Cross-site Scripting (XSS). Strings parsed from the anchor in the address bar were not sanitized, allowing for arbitrary HTML to be embedded into the page.\n\n## Details\nCross-Site Scripting (XSS) attacks occur when an attacker tricks a user’s browser to execute malicious JavaScript code in the context of a victim’s domain. Such scripts can steal the user’s session cookies for the domain, scrape or modify its content, and perform or modify actions on the user’s behalf, actions typically blocked by the browser’s Same Origin Policy.\n\nThese attacks are possible by escaping the context of the web application and injecting malicious scripts in an otherwise trusted website. These scripts can introduce additional attributes (say, a \"new\" option in a dropdown list or a new link to a malicious site) and can potentially execute code on the clients side, unbeknown to the victim. This occurs when characters like `<` `>` `\"` `'` are not escaped properly.\n\nThere are a few types of XSS:\n- **Persistent XSS** is an attack in which the malicious code persists into the web app’s database.\n- **Reflected XSS** is an which the website echoes back a portion of the request. The attacker needs to trick the user into clicking a malicious link (for instance through a phishing email or malicious JS on another page), which triggers the XSS attack.\n- **DOM-based XSS** is an that occurs purely in the browser when client-side JavaScript echoes back a portion of the URL onto the page. DOM-Based XSS is notoriously hard to detect, as the server never gets a chance to see the attack taking place.\n\n\nYou can read more about `Cross-site Scripting (XSS)` on our [blog](https://snyk.io/blog/xss-attacks-the-next-wave/).\n\n## Remediation\nUpgrade `yard` to version 0.8.7.1 or higher.\n\n## References\n- [Github Commit](https://github.com/lsegal/yard/commit/715d6cb462392e610ab751fcfee7b622850fa802)\n",
        "disclosureTime": "2013-09-11T21:00:00Z",
        "functions": [],
        "id": "SNYK-RUBY-YARD-20430",
        "identifiers": {
          "CVE": [],
          "CWE": [
            "CWE-79"
          ]
        },
        "language": "ruby",
        "methods": [],
        "modificationTime": "2018-11-18T11:50:43.140701Z",
        "moduleName": "yard",
        "packageManager": "rubygems",
        "packageName": "yard",
        "patches": [],
        "publicationTime": "2017-09-14T09:12:31.394000Z",
        "references": [
          {
            "title": "Github Commit",
            "url": "https://github.com/lsegal/yard/commit/715d6cb462392e610ab751fcfee7b622850fa802"
          }
        ],
        "semver": {
          "vulnerable": [
            "<0.8.7.1, >=0.8.0"
          ]
        },
        "severity": "low",
        "title": "Cross-site Scripting (XSS)"
      },
      "SNYK-RUBY-YARD-22004": {
        "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2017-12-24T17:44:10.116000Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 7.5,
        "description": "## Overview\n[`yard`](https://rubygems.org/gems/yard) is a documentation generation tool for the Ruby programming language.\n\nAffected versions of this package are vulnerable to Directory Traversal via the `lib/yard/core_ext/file.rb` method in the server. It does not block relative paths with an initial `../` sequence, which allows attackers to conduct directory traversal attacks and read arbitrary files.\n\n## Details\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n\n## References\n- [GitHub Commit](https://github.com/lsegal/yard/commit/b0217b3e30dc53d057b1682506333335975e62b4)\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2017-17042)\n",
        "disclosureTime": "2017-11-23T17:44:10.116000Z",
        "functions": [],
        "id": "SNYK-RUBY-YARD-22004",
        "identifiers": {
          "CVE": [
            "CVE-2017-17042"
          ],
          "CWE": [
            "CWE-22"
          ]
        },
        "language": "ruby",
        "methods": [],
        "modificationTime": "2018-11-18T11:50:51.823161Z",
        "moduleName": "yard",
        "packageManager": "rubygems",
        "packageName": "yard",
        "patches": [],
        "publicationTime": "2017-12-25T15:44:10.116000Z",
        "references": [
          {
            "title": "NVD",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-17042"
          },
          {
            "title": "GitHub Commit",
            "url": "https://github.com/lsegal/yard/commit/b0217b3e30dc53d057b1682506333335975e62b4"
          }
        ],
        "semver": {
          "vulnerable": [
            "< 0.9.11"
          ]
        },
        "severity": "high",
        "title": "Directory Traversal"
      }
    }
  },
  "meta": {
    "isPublic": false,
    "isLicensesEnabled": false,
    "licensesPolicy": null,
    "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.13.1\n# ignores vulnerabilities until expiry date; change duration by modifying expiry date\nignore:\n  SNYK-RUBY-LYNX-20160:\n    - '*':\n        reason: will check again in 2100\n        expires: 2100-01-01T00:00:00.000Z\n        source: cli\n  SNYK-RUBY-SANITIZE-22024:\n    - '*':\n        reason: who needs sanitization anyway\n        created: '2018-11-23T07:33:16.687Z'\n        ignoredBy:\n          id: 3c2d7dd6-e86e-4842-8124-5766bf55e060\n          name: brian@doogdog.com\n          email: brian@doogdog.com\n        reasonType: temporary-ignore\n        disregardIfFixable: false\n        source: api\npatch: {}\n",
    "ignoreSettings": null,
    "org": "test-org"
  },
  "filesystemPolicy": true
}
