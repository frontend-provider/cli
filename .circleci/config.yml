version: 2.1

orbs:
  win: circleci/windows@2.2.0

defaults: &defaults
  parameters:
    node_version:
      type: string
      default: ""
  working_directory: ~/snyk

windows_defaults: &windows_defaults
  environment:
    npm_config_loglevel: silent
  executor:
    name: win/default

commands:
  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: Use snyk-main npmjs user
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Install dependencies
          command: npm install
  build_ts:
    description: Build js files from ts
    steps:
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist/
  install_maven_windows:
    description: Install maven
    steps:
      - run: choco install maven
  install_sbt_windows:
    description: Install SBT
    steps:
      - run: choco install sbt
  install_maven_unix:
    description: Install maven
    steps:
      - run: sudo apt update
      - run: sudo apt install -y maven
  install_sbt_unix:
    description: Install SBT
    steps:
      - run: sudo apt install apt-transport-https ca-certificates
      - run: echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a /etc/apt/sources.list.d/sbt.list
      - run: curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo apt-key add
      - run: sudo apt update
      - run: sudo apt install -y sbt
  install_node_npm:
    description: Install correct Node version
    parameters:
      node_version:
        type: string
        default: ""
    steps:
      - run:
          name: Install correct version of Node
          command: nvm install << parameters.node_version >>
      - run:
          name: Use correct version of Node
          command: nvm use << parameters.node_version >>
  show_node_version:
    description: Log Node and npm version
    steps:
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version

jobs:
  common:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - show_node_version
      - checkout
      - attach_workspace:
          at: ~/snyk
      - install_deps
      - build_ts
      - run:
          name: Run auth
          command: npm run snyk-auth
      - run:
          name: Run tests
          command: npm run test:common

  danger:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - run:
          name: Danger Zone
          command: npx danger ci --failOnErrors

  test-windows:
    <<: *defaults
    <<: *windows_defaults
    steps:
      - run: git config --global core.autocrlf false
      - install_maven_windows
      - install_sbt_windows
      - install_node_npm:
          node_version: << parameters.node_version >>
      - show_node_version
      - checkout
      - attach_workspace:
          at: ~/snyk
      - install_deps
      - build_ts
      - run:
          name: npm version
          command: npm --version
      - run:
          name: Run auth
          command: npm run snyk-auth-windows
      - run:
          name: Run tests
          command: npm run test-windows

  test-unix:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - install_maven_unix
      - install_sbt_unix
      - show_node_version
      - checkout
      - attach_workspace:
          at: ~/snyk
      - install_deps
      - build_ts
      - run:
          name: npm version
          command: npm --version
      - run:
          name: Run auth
          command: npm run snyk-auth
      - run:
          name: Run tests
          command: npm test

  test-regression:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - install_deps
      - build_ts
      - run:
          name: Clear node_modules
          command: rm -rf node_modules/
      - run:
          name: Install only production dependencies
          command: npm install
          environment:
            NODE_ENV: production
      - run:
          name: Run auth
          command: node ~/snyk/dist/cli/index.js auth $SNYK_API_KEY
      - run:
          name: Regression test in test command
          command: node ~/snyk/dist/cli/index.js test test/acceptance/workspaces/npm-package-no-vulns
      - run:
          name: Regression test in monitor command
          command: node ~/snyk/dist/cli/index.js monitor test/acceptance/workspaces/npm-package-no-vulns

  release:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: small
    steps:
      - install_deps
      - run: sudo npm i -g semantic-release @semantic-release/exec pkg
      - run:
          name: Publish to GitHub
          command: semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      - common:
          name: Common
          context: nodejs-install
          node_version: "8"
          filters:
            branches:
              ignore:
                - master
      - danger:
          name: Danger Zone
          node_version: "8"
          filters:
            branches:
              ignore:
                - master
      - test-windows:
          name: Windows Tests for Node v12 support
          context: nodejs-install
          node_version: "12.0.0"
          requires:
              - Common
              - Danger Zone
          filters:
            branches:
              ignore:
                - master
      - test-windows:
          name: Windows Tests for Node v10 support
          context: nodejs-install
          node_version: "10.21.0"
          requires:
              - Common
              - Danger Zone
          filters:
            branches:
              ignore:
                - master
      - test-windows:
          name: Windows Tests for Node v8 support
          context: nodejs-install
          node_version: "8.17.0"
          requires:
              - Common
              - Danger Zone
          filters:
            branches:
              ignore:
                - master
      - test-unix:
          name: Unix Tests for Node v12 support
          context: nodejs-install
          node_version: "12.16.2"
          requires:
              - Common
              - Danger Zone
          filters:
            branches:
              ignore:
                - master
      - test-unix:
          name: Unix Tests for Node v10 support
          context: nodejs-install
          node_version: "10"
          requires:
              - Common
              - Danger Zone
          filters:
            branches:
              ignore:
                - master
      - test-unix:
          name: Unix Tests for Node v8 support
          context: nodejs-install
          node_version: "8"
          requires:
              - Common
              - Danger Zone
          filters:
            branches:
              ignore:
                - master
      - test-regression:
          name: Regression Test
          context: nodejs-install
          node_version: "8"
          requires:
            - Unix Tests for Node v8 support
            - Unix Tests for Node v10 support
            - Unix Tests for Node v12 support
            - Windows Tests for Node v8 support
            - Windows Tests for Node v10 support
            - Windows Tests for Node v12 support
          filters:
            branches:
              ignore:
                - master
      - release:
          name: Release
          context: nodejs-app-release
          node_version: "10"
          filters:
            branches:
              only:
                - master
