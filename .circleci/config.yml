version: 2.1

orbs:
  win: circleci/windows@2.4.1
  aws-cli: circleci/aws-cli@2.0.3
  gh: circleci/github-cli@1.0.4

defaults: &defaults
  parameters:
    node_version:
      type: string
      default: ''
    root_tap_tests:
      type: boolean
      default: false
    jest_tests:
      type: boolean
      default: false
    acceptance_tests:
      type: boolean
      default: false
    system_tests:
      type: boolean
      default: false
    package_tests:
      type: boolean
      default: false
  working_directory: ~/snyk

commands:
  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: Install dependencies
          command: npm ci
  update_local_npmrc_linux:
    description: Update local .npmrc file (Linux)
    steps:
      - run:
          name: Update local .npmrc file (Linux)
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
  build_ts:
    description: Build js files from ts
    steps:
      - run:
          name: Build
          command: npm run build:prod
      - persist_to_workspace:
          root: .
          paths:
            - dist/
            - packages/*/dist
            - pysrc
  install_gradle_windows:
    description: Install gradle
    steps:
      - run: choco install gradle --version 6.8.3
  install_maven_windows:
    description: Install maven
    steps:
      - run: choco install maven --version 3.8.2
  install_sbt_windows:
    description: Install SBT
    steps:
      - run: choco install sbt --version 1.5.5
  install_sdkman_linux:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            curl -s "https://get.sdkman.io?rcupdate=false" | bash
            echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
            source $BASH_ENV
  install_jdk_linux:
    description: Install JDK
    steps:
      - run:
          name: Installing JDK
          command: sdk install java 11.0.11.hs-adpt
  install_gradle_linux:
    description: Install gradle
    steps:
      - run:
          name: Installing Gradle
          command: sdk install gradle 6.8.3
  install_maven_linux:
    description: Install maven
    steps:
      - run:
          name: Installing maven
          command: sdk install maven 3.8.2
  install_sbt_linux:
    description: Install SBT
    steps:
      - run:
          name: Installing sbt
          command: sdk install sbt 1.5.5
  install_node_windows:
    description: Install the given Node version on Windows using Chocolatey
    parameters:
      node_version:
        type: string
        default: ''
    steps:
      - run:
          name: Install Node with Chocolatey
          command: |
            $current_node_version = node --version
            nvm uninstall $current_node_version
            choco install nodejs --version=<< parameters.node_version >>
  install_shellspec:
    description: Install Shellspec
    steps:
      - run: curl -fsSL https://git.io/shellspec | sh -s -- -y
      - run: sudo ln -s ${HOME}/.local/lib/shellspec/shellspec /usr/local/bin/shellspec
      - run: sudo apt-get install jq

jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: large
    steps:
      - checkout
      - run: sudo npm install -g npm@7.21.0
      - install_deps
      - build_ts
  regression-test:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - install_shellspec
      - run: sudo npm install -g npm@7.21.0
      - install_sdkman_linux
      - install_jdk_linux
      - install_gradle_linux
      - install_maven_linux
      - install_deps
      - run: sudo apt-get install python-pip
      - attach_workspace:
          at: ~/snyk
      - run: npm run lint
      - run:
          name: npm install for fixture project
          working_directory: ~/snyk/test/fixtures/basic-npm
          command: npm install
      - run:
          name: prune dependencies
          command: node ./release-scripts/prune-dependencies-in-packagejson.js
      - run: mkdir ./dist-pack
      - run:
          name: pack
          command: npm pack ..
          path: ./dist-pack
      - run:
          name: Install packed Snyk globally
          command: find . -name '*.tgz' | xargs sudo npm install -g
      - run:
          name: Run shellspec
          working_directory: ~/snyk/test/smoke
          command: |
            echo "Checkout the README in test/smoke folder for more details about this step"
            unset SNYK_API
            unset SNYK_API_KEY
            shellspec -f d -e REGRESSION_TEST=1
  test-windows:
    <<: *defaults
    executor: win/default
    steps:
      - run: git config --global core.autocrlf false
      - install_gradle_windows
      - install_maven_windows
      - install_sbt_windows
      - install_node_windows:
          node_version: << parameters.node_version >>
      - checkout
      - run: npm install -g npm@7.21.0
      - install_deps
      - attach_workspace:
          at: ~/snyk
      - run:
          name: Update local .npmrc file (Windows)
          command: echo "//registry.npmjs.org/:_authToken=$env:NPM_TOKEN" >> .npmrc
      - run:
          name: Add Snyk Token to Snyk Config
          command: node ./bin/snyk config set "api=$env:SNYK_API_KEY"
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package unit tests
                command: npm run test:packages-unit -- --ci
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package acceptance tests
                command: npm run test:packages-acceptance -- --ci
      - when:
          condition: << parameters.root_tap_tests >>
          steps:
            - run:
                name: Run "Root" tap tests
                command: npm run test:test
      - when:
          condition: << parameters.jest_tests >>
          steps:
            - run:
                name: Run Jest tests in root (to remove)
                command: npm run test:jest -- --ci
            - run:
                name: Run Jest Unit Tests
                command: npm run test:jest-unit -- --ci
            - run:
                name: Run Jest System Tests
                command: npm run test:jest-system -- --ci
            - run:
                name: Run Jest Acceptance Tests
                command: npm run test:jest-acceptance -- --ci
      - when:
          condition: << parameters.acceptance_tests >>
          steps:
            - run:
                name: Run Acceptance tests
                command: npm run test:acceptance-windows
      - when:
          condition: << parameters.system_tests >>
          steps:
            - run:
                name: Run System tests
                command: npm run test:system
  test-linux:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: large
    steps:
      - install_sdkman_linux
      - install_jdk_linux
      - install_gradle_linux
      - install_maven_linux
      - install_sbt_linux
      - checkout
      - run: sudo npm install -g npm@7.21.0
      - attach_workspace:
          at: ~/snyk
      - update_local_npmrc_linux
      - install_deps
      - run:
          name: Add Snyk Token to Snyk Config
          command: node ./bin/snyk config set "api=${SNYK_API_KEY}"
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package unit tests
                command: npm run test:packages-unit -- --ci
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package acceptance tests
                command: npm run test:packages-acceptance -- --ci
      - when:
          condition: << parameters.root_tap_tests >>
          steps:
            - run:
                name: Run "Root" tap tests
                command: npm run test:test
      - when:
          condition: << parameters.jest_tests >>
          steps:
            - run:
                name: Run Jest tests in root (to remove)
                command: npm run test:jest -- --ci
            - run:
                name: Run Jest Unit Tests
                command: npm run test:jest-unit -- --ci
            - run:
                name: Run Jest System Tests
                command: npm run test:jest-system -- --ci
            - run:
                name: Run Jest Acceptance Tests
                command: npm run test:jest-acceptance -- --ci
      - when:
          condition: << parameters.acceptance_tests >>
          steps:
            - run:
                name: Run Acceptance tests
                command: npm run test:acceptance
      - when:
          condition: << parameters.system_tests >>
          steps:
            - run:
                name: Run System tests
                command: npm run test:system
  dev-release:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: large
    steps:
      - checkout
      - run: sudo npm install -g npm@7.21.0
      - install_deps
      - attach_workspace:
          at: ~/snyk
      - run:
          name: Update package versions
          command: ./release-scripts/update-dev-versions.sh
      - run:
          name: Install osslsigncode
          command: sudo apt-get install -y osslsigncode
      - run:
          name: prune dependencies
          command: node ./release-scripts/prune-dependencies-in-packagejson.js
      - run:
          name: Create Binaries
          command: |
            cat package.json
            ./release-scripts/make-binaries.sh
            ls -la ./binary-releases
      - store_artifacts:
          path: ./binary-releases
      - run:
          name: Validate binary release checksums
          working_directory: ~/snyk/binary-releases
          command: |
            ../release-scripts/validate-checksums.sh
      - run: mkdir ./dist-pack
      - run:
          name: pack
          command: npm pack ..
          path: ./dist-pack
      - store_artifacts:
          path: ./dist-pack
  release:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: small
    steps:
      - checkout
      - run:
          name: Should I release?
          command: ./release-scripts/should-i-release.sh
      - gh/setup:
          version: 1.9.2
      - aws-cli/install:
          version: 2.2.32
      - run: sudo npm install -g npm@7.21.0
      - run:
          name: Install osslsigncode
          command: sudo apt-get install -y osslsigncode
      - update_local_npmrc_linux
      - install_deps
      - attach_workspace:
          at: ~/snyk
      - run:
          name: prune dependencies
          command: node ./release-scripts/prune-dependencies-in-packagejson.js
      - run:
          name: Update package versions
          command: ./release-scripts/update-versions.sh
      - run:
          name: Make git ignore changes relating to version updates and to .npmrc
          command: |
            git update-index --skip-worktree -- ./lerna.json
            git update-index --skip-worktree -- ./package.json
            git update-index --skip-worktree -- ./packages/snyk-protect/package.json
            git update-index --skip-worktree -- ./.npmrc
      - run:
          name: Lerna Publish
          command: |
            npx lerna publish minor --yes --no-push --no-git-tag-version --exact
      - run:
          name: Create Binaries
          command: |
            ./release-scripts/make-binaries.sh
            ls -la ./binary-releases
      - store_artifacts:
          path: ./binary-releases
      - run:
          name: Validate binary release checksums
          working_directory: ~/snyk/binary-releases
          command: |
            ../release-scripts/validate-checksums.sh
      - run:
          name: Generate Release Notes
          command: |
            npx conventional-changelog-cli -p angular -l -r 1 > RELEASE_NOTES.txt
      - run:
          name: Upload Artifacts
          command: ./release-scripts/upload-artifacts.sh
      - run:
          name: Handle failed CLI release
          command: |
            ./release-scripts/handle-failed-release.sh
          when: on_fail

workflows:
  version: 2
  test_and_release:
    jobs:
      - build:
          name: Build
          context: nodejs-install
          node_version: '14.17.5'
      - regression-test:
          name: Regression Test
          context: nodejs-install
          node_version: '14.17.5'
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master
      - dev-release:
          name: Dev Release
          node_version: '14.17.5'
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master

      - test-windows:
          name: Windows, Node v<< matrix.node_version >> - Packages, Jest, System tests
          context: nodejs-install
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master
          matrix:
            parameters:
              node_version: ['10.24.1', '12.22.5', '14.17.5']
          jest_tests: true
          system_tests: true
          package_tests: true
      - test-windows:
          name: Windows, Node v<< matrix.node_version >> - Acceptance tests
          context: nodejs-install
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master
          matrix:
            parameters:
              node_version: ['10.24.1', '12.22.5', '14.17.5']
          acceptance_tests: true
      - test-windows:
          name: Windows, Node v<< matrix.node_version >> - "Root" tap tests
          context: nodejs-install
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master
          matrix:
            parameters:
              node_version: ['10.24.1', '12.22.5', '14.17.5']
          root_tap_tests: true

      - test-linux:
          name: Linux, Node v<< matrix.node_version >> - Packages, Jest, System tests
          context: nodejs-install
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master
          matrix:
            parameters:
              node_version: ['10.24.1', '12.22.5', '14.17.5']
          jest_tests: true
          system_tests: true
          package_tests: true
      - test-linux:
          name: Linux, Node v<< matrix.node_version >> - Acceptance tests
          context: nodejs-install
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master
          matrix:
            parameters:
              node_version: ['10.24.1', '12.22.5', '14.17.5']
          acceptance_tests: true
      - test-linux:
          name: Linux, Node v<< matrix.node_version >> - "Root" tap tests
          context: nodejs-install
          requires:
            - Build
          filters:
            branches:
              ignore:
                - master
          matrix:
            parameters:
              node_version: ['10.24.1', '12.22.5', '14.17.5']
          root_tap_tests: true

      - release:
          name: Release
          context: nodejs-app-release
          node_version: '14.17.5'
          filters:
            branches:
              only:
                - master
          requires:
            - Build
