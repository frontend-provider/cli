version: 2.1

orbs:
  win: circleci/windows@2.2.0
  aws-cli: circleci/aws-cli@1.4.0

defaults: &defaults
  parameters:
    node_version:
      type: string
      default: ''
    root_tap_tests:
      type: boolean
      default: false
    jest_tests:
      type: boolean
      default: false
    acceptance_tests:
      type: boolean
      default: false
    system_tests:
      type: boolean
      default: false
    package_tests:
      type: boolean
      default: false
  working_directory: ~/snyk

windows_defaults: &windows_defaults
  environment:
    npm_config_loglevel: silent
  executor:
    name: win/default

commands:
  install_deps:
    description: Install dependencies
    steps:
      - run:
          name: Install dependencies
          command: npm install
  update_local_npmrc_linux:
    description: Update local .npmrc file (Linux)
    steps:
      - run:
          name: Update local .npmrc file (Linux)
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
  build_ts:
    description: Build js files from ts
    steps:
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist/
  install_gradle_windows:
    description: Install gradle
    steps:
      - run: choco install gradle
  install_maven_windows:
    description: Install maven
    steps:
      - run: choco install maven
  install_sbt_windows:
    description: Install SBT
    steps:
      - run: choco install sbt
  install_sdkman_linux:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            curl -s "https://get.sdkman.io?rcupdate=false" | bash
            echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
            source $BASH_ENV
  install_jdk_linux:
    description: Install JDK
    steps:
      - run:
          name: Installing JDK
          command: sdk install java $(sdk list java | grep -o -m1 "11\.[0-9\.]\+hs-adpt")
  install_gradle_linux:
    description: Install gradle
    steps:
      - run:
          name: Installing Gradle
          command: sdk install gradle 6.4.1
  install_maven_linux:
    description: Install maven
    steps:
      - run:
          name: Installing maven
          command: sdk install maven 3.6.3
  install_sbt_linux:
    description: Install SBT
    steps:
      - run:
          name: Installing sbt
          command: sdk install sbt 1.3.12
  install_node_windows:
    description: Install the given Node version on Windows using Chocolatey
    parameters:
      node_version:
        type: string
        default: ''
    steps:
      - run:
          name: Install Node with Chocolatey
          command: |
            $current_node_version = node --version
            nvm uninstall $current_node_version
            choco install nodejs --version=<< parameters.node_version >>
  install_shellspec:
    description: Install Shellspec
    steps:
      - run: curl -fsSL https://git.io/shellspec | sh -s -- -y
      - run: sudo ln -s ${HOME}/.local/lib/shellspec/shellspec /usr/local/bin/shellspec
      - run: sudo apt-get install jq
  show_node_version:
    description: Log Node and npm version
    steps:
      - run:
          name: Node version
          command: node --version
      - run:
          name: NPM version
          command: npm --version
  generate_help:
    description: Generate CLI help files
    steps:
      - run:
          name: Run CLI help text builder
          command: npm run generate-help
  install_github_cli:
    description: Install GitHub CLI (gh)
    steps:
      - run:
          name: Install GitHub CLI (gh)
          command: |
            mkdir gh-download
            curl -Lo ./gh-download/gh_1.3.1_linux_amd64.tar.gz https://github.com/cli/cli/releases/download/v1.3.1/gh_1.3.1_linux_amd64.tar.gz
            tar -xf ./gh-download/gh_1.3.1_linux_amd64.tar.gz --directory gh-download
            chmod a+x gh-download/gh_1.3.1_linux_amd64/bin/gh
            mkdir -p /home/circleci/bin
            mv gh-download/gh_1.3.1_linux_amd64/bin/gh /home/circleci/bin
            which gh
            gh --version
  install_lerna_linux:
    description: Setup Lerna
    steps:
      - run: sudo npm install -g lerna@3.22.1

jobs:
  regression-test:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - install_shellspec
      - run: sudo npm install -g npm@7
      - show_node_version
      - update_local_npmrc_linux
      - install_deps
      - build_ts
      - generate_help
      - run:
          name: Run auth
          command: npm run snyk-auth
      - run:
          name: Run tests
          command: npm run test:common
      - run:
          name: Clear Snyk config
          command: rm ~/.config/configstore/snyk.json
      - run:
          name: Clear node_modules
          command: rm -rf node_modules/
      - run:
          name: Install only production dependencies
          command: npx npm@6 install # kludge because npm@7 will invoke the lifecycle scripts (thus running prepare -> tsc) even if we use --ignore-scripts
          environment:
            NODE_ENV: production
      - run:
          name: npm install for fixture project
          working_directory: ~/snyk/test/fixtures/basic-npm
          command: npm install
      - run:
          name: Setup alias for snyk
          working_directory: ~/snyk/
          command: sudo ./test/smoke/setup-alias-for-snyk.sh
      - run:
          name: Run shellspec
          working_directory: ~/snyk/test/smoke
          command: |
            echo "Checkout the README in test/smoke folder for more details about this step"
            unset SNYK_API
            unset SNYK_API_KEY
            shellspec --profile --output junit --reportdir ../../test-results/shellspec-regression-tests -f d -e REGRESSION_TEST=1
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  test-windows:
    <<: *defaults
    <<: *windows_defaults
    steps:
      - run: git config --global core.autocrlf false
      - install_gradle_windows
      - install_maven_windows
      - install_sbt_windows
      - show_node_version
      - install_node_windows:
          node_version: << parameters.node_version >>
      - show_node_version
      - checkout
      - attach_workspace:
          at: ~/snyk
      - run: npm install -g npm@7
      - show_node_version
      - run:
          name: Setup Lerna
          command: npm install -g lerna@3.22.1
      - run:
          name: Update local .npmrc file (Windows)
          command: echo "//registry.npmjs.org/:_authToken=$env:NPM_TOKEN" >> .npmrc
      - run:
          name: Install dependencies (Windows)
          command: npm install --ignore-scripts # ignore-scripts required because of postinstall script in snyk-resolve-deps package
      - build_ts
      - run:
          name: npm version
          command: npm --version
      - run:
          name: Run auth
          shell: bash.exe
          command: npm run snyk-auth-windows
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package unit tests
                command: npm run test:packages-unit -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:packages-unit'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-packages-unit'
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package acceptance tests
                command: npm run test:packages-acceptance -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:packages-acceptance'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-packages-acceptance'
      - when:
          condition: << parameters.root_tap_tests >>
          steps:
            - run:
                name: Run "Root" tap tests
                command: |
                  npm run test:test -- --output-file tap-output
                  npx tap-junit --input tap-output --output test-results/tap-test-test
      - when:
          condition: << parameters.jest_tests >>
          steps:
            - run:
                name: Run Jest tests in root (to remove)
                command: npm run test:jest -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest'
            - run:
                name: Run Jest Unit Tests
                command: npm run test:jest-unit -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest-unit'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-unit'
            - run:
                name: Run Jest System Tests
                command: npm run test:jest-system -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest-system'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-system'
            - run:
                name: Run Jest Acceptance Tests
                command: npm run test:jest-acceptance -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest-acceptance'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-acceptance'
      - when:
          condition: << parameters.acceptance_tests >>
          steps:
            - run:
                name: Run Acceptance tests
                command: |
                  npm run test:acceptance-windows -- --output-file tap-output
                  npx tap-junit --input tap-output --output test-results/tap-test-acceptance-windows
      - when:
          condition: << parameters.system_tests >>
          steps:
            - run:
                name: Run System tests
                command: |
                  npm run test:system -- --output-file tap-output
                  npx tap-junit --input tap-output --output test-results/tap-test-system
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  test-linux:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    steps:
      - install_sdkman_linux
      - install_jdk_linux
      - install_gradle_linux
      - install_maven_linux
      - install_sbt_linux
      - show_node_version
      - checkout
      - attach_workspace:
          at: ~/snyk
      - run: sudo npm install -g npm@7
      - show_node_version
      - install_lerna_linux
      - update_local_npmrc_linux
      - install_deps
      - build_ts
      - run:
          name: npm version
          command: npm --version
      - run:
          name: Run auth
          command: npm run snyk-auth
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package unit tests
                command: npm run test:packages-unit -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:packages-unit'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-packages-unit'
      - when:
          condition: << parameters.package_tests >>
          steps:
            - run:
                name: Run Package acceptance tests
                command: npm run test:packages-acceptance -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:packages-acceptance'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-packages-acceptance'
      - when:
          condition: << parameters.root_tap_tests >>
          steps:
            - run:
                name: Run "Root" tap tests
                command: |
                  npm run test:test -- --output-file tap-output
                  npx tap-junit --input tap-output --output test-results/tap-test-test
      - when:
          condition: << parameters.jest_tests >>
          steps:
            - run:
                name: Run Jest tests in root (to remove)
                command: npm run test:jest -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest'
            - run:
                name: Run Jest Unit Tests
                command: npm run test:jest-unit -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest-unit'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-unit'
            - run:
                name: Run Jest System Tests
                command: npm run test:jest-system -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest-system'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-system'
            - run:
                name: Run Jest Acceptance Tests
                command: npm run test:jest-acceptance -- --ci --reporters="default" --reporters="jest-junit"
                environment:
                  JEST_SUITE_NAME: 'test:jest-acceptance'
                  JEST_JUNIT_OUTPUT_DIR: 'test-results/jest-acceptance'
      - when:
          condition: << parameters.acceptance_tests >>
          steps:
            - run:
                name: Run Acceptance tests
                command: |
                  npm run test:acceptance -- --output-file tap-output
                  npx tap-junit --input tap-output --output test-results/tap-test-acceptance
      - when:
          condition: << parameters.system_tests >>
          steps:
            - run:
                name: Run System tests
                command: |
                  npm run test:system -- --output-file tap-output
                  npx tap-junit --input tap-output --output test-results/tap-test-system
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  dev-release:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Install npm@7
          command: |
            sudo npm install -g npm@7
      - show_node_version
      - install_lerna_linux
      - install_deps
      - generate_help
      - run:
          name: Update package versions
          command: ./release-scripts/update-versions.sh
      - run:
          name: Install osslsigncode
          command: sudo apt-get install -y osslsigncode
      - run:
          name: Create Binaries
          command: |
            ./release-scripts/make-binaries.sh
            ls -la ./binary-releases
      - store_artifacts:
          path: ./binary-releases
      - run:
          name: Validate binary release checksums
          working_directory: ~/snyk/binary-releases
          command: |
            ../release-scripts/validate-checksums.sh

  release:
    <<: *defaults
    docker:
      - image: circleci/node:<< parameters.node_version >>
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Should I release?
          command: ./release-scripts/should-i-release.sh
      - install_github_cli
      - aws-cli/install
      - run:
          name: Install npm@7
          command: |
            sudo npm install -g npm@7
      - show_node_version
      - install_lerna_linux
      - update_local_npmrc_linux
      - install_deps
      - generate_help
      - run:
          name: Update package versions
          command: ./release-scripts/update-versions.sh
      - run:
          name: Make git ignore changes relating to version updates and to .npmrc
          command: |
            git update-index --skip-worktree -- ./lerna.json
            git update-index --skip-worktree -- ./package.json
            git update-index --skip-worktree -- ./packages/snyk-protect/package.json
            git update-index --skip-worktree -- ./.npmrc
      - run:
          name: Lerna Publish
          command: |
            lerna publish minor --yes --no-push --no-git-tag-version --exact
      - run:
          name: Install osslsigncode
          command: sudo apt-get install -y osslsigncode
      - run:
          name: Create Binaries
          command: |
            ./release-scripts/make-binaries.sh
            ls -la ./binary-releases
      - store_artifacts:
          path: ./binary-releases
      - run:
          name: Validate binary release checksums
          working_directory: ~/snyk/binary-releases
          command: |
            ../release-scripts/validate-checksums.sh
      - run:
          name: Generate Release Notes
          command: |
            npx conventional-changelog-cli -p angular -l -r 1 > RELEASE_NOTES.txt
      - run:
          name: Upload Artifacts
          command: ./release-scripts/upload-artifacts.sh
      - run:
          name: Handle failed CLI release
          command: |
            ./release-scripts/handle-failed-release.sh
          when: on_fail

workflows:
  version: 2
  test_and_release:
    jobs:
      - regression-test:
          name: Regression Test
          context: nodejs-install
          node_version: '12.16.2'
          filters:
            branches:
              ignore:
                - master
      - dev-release:
          name: Dev Release
          node_version: '14'
          requires:
            - Regression Test
      - test-windows:
          name: Windows, Node 14 - Packages, Jest, Acceptance, System tests
          context: nodejs-install
          node_version: '14.15.4'
          jest_tests: true
          acceptance_tests: true
          system_tests: true
          package_tests: true
          requires:
            - Regression Test
      - test-windows:
          name: Windows, Node 14 - "Root" tap tests
          context: nodejs-install
          node_version: '14.15.4'
          root_tap_tests: true
          requires:
            - Regression Test
      - test-windows:
          name: Windows, Node 12 - Packages, Jest, Acceptance, System tests
          context: nodejs-install
          node_version: '12.21.0'
          jest_tests: true
          acceptance_tests: true
          system_tests: true
          package_tests: true
          requires:
            - Regression Test
      - test-windows:
          name: Windows, Node 12 - "Root" tap tests
          context: nodejs-install
          node_version: '12.21.0'
          root_tap_tests: true
          requires:
            - Regression Test

      - test-windows:
          name: Windows, Node 10 - Packages, Jest, Acceptance, System tests
          context: nodejs-install
          node_version: '10.23.1'
          jest_tests: true
          acceptance_tests: true
          system_tests: true
          package_tests: true
          requires:
            - Regression Test
      - test-windows:
          name: Windows, Node 10 - "Root" tap tests
          context: nodejs-install
          node_version: '10.23.1'
          root_tap_tests: true
          requires:
            - Regression Test
      - test-linux:
          name: Linux, Node 14 - Packages, Jest, Acceptance, System tests
          context: nodejs-install
          node_version: '14.15.4'
          jest_tests: true
          acceptance_tests: true
          system_tests: true
          package_tests: true
          requires:
            - Regression Test
      - test-linux:
          name: Linux, Node 14 - "Root" tap tests
          context: nodejs-install
          node_version: '14.15.4'
          root_tap_tests: true
          requires:
            - Regression Test
      - test-linux:
          name: Linux, Node 12 - Packages, Jest, Acceptance, System tests
          context: nodejs-install
          node_version: '12.21.0'
          jest_tests: true
          acceptance_tests: true
          system_tests: true
          package_tests: true
          requires:
            - Regression Test
      - test-linux:
          name: Linux, Node 12 - "Root" tap tests
          context: nodejs-install
          node_version: '12.21.0'
          root_tap_tests: true
          requires:
            - Regression Test
      - test-linux:
          name: Linux, Node 10 - Packages, Jest, Acceptance, System tests
          context: nodejs-install
          node_version: '10.23.1'
          jest_tests: true
          acceptance_tests: true
          system_tests: true
          package_tests: true
          requires:
            - Regression Test
      - test-linux:
          name: Linux, Node 10 - "Root" tap tests
          context: nodejs-install
          node_version: '10.23.1'
          root_tap_tests: true
          requires:
            - Regression Test
      - release:
          name: Release
          context: nodejs-app-release
          node_version: '14.15.4'
          filters:
            branches:
              only:
                - master
