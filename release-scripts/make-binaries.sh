#!/usr/bin/env bash
set -euo pipefail

mkdir binary-releases

mv "$(npm pack --workspace '@snyk/fix')" binary-releases/snyk-fix.tgz
mv "$(npm pack --workspace '@snyk/protect')" binary-releases/snyk-protect.tgz
mv "$(npm pack)" binary-releases/snyk.tgz

npx pkg . --compress Brotli -t node16-alpine-x64 -o binary-releases/snyk-alpine
npx pkg . --compress Brotli -t node16-linux-x64  -o binary-releases/snyk-linux
npx pkg . --compress Brotli -t node16-macos-x64  -o binary-releases/snyk-macos
npx pkg . --compress Brotli -t node16-win-x64    -o binary-releases/snyk-win-unsigned.exe

# Why `--no-bytecode` for Linux/arm64:
#   arm64 bytecode generation requires various build tools on an x64 build
#   environment. So disabling until we can support it. It's an optimisation.
#   https://github.com/vercel/pkg#targets
npx pkg . --compress Brotli -t node16-linux-arm64 -o binary-releases/snyk-linux-arm64 --no-bytecode

./docker-desktop/build.sh darwin x64
./docker-desktop/build.sh darwin arm64
./release-scripts/docker-desktop-release.sh

# sign the windows binary
./release-scripts/sign-windows-binary.sh

# compute checksums
pushd binary-releases
shasum -a 256 snyk-alpine >snyk-alpine.sha256
shasum -a 256 snyk-linux >snyk-linux.sha256
shasum -a 256 snyk-linux-arm64 >snyk-linux-arm64.sha256
shasum -a 256 snyk-macos >snyk-macos.sha256
# note: checksum for snyk-win.exe is generated by `sign-windows-binary.sh`
# note: checksum for docker-mac-signed-bundle is generated by `docker-desktop-release.sh`
shasum -a 256 snyk-fix.tgz > snyk-fix.tgz.sha256
shasum -a 256 snyk-protect.tgz > snyk-protect.tgz.sha256
shasum -a 256 snyk.tgz > snyk.tgz.sha256

# GPG signed shasums file
cat ./*.sha256 >> sha256sums.txt

echo "Importing PGP key"
echo "$SNYK_CODE_SIGNING_PGP_PRIVATE" | base64 --decode | gpg --import --batch --passphrase="$SNYK_CODE_SIGNING_GPG_PASSPHRASE"

echo "Signing shasums file"
gpg --clear-sign --local-user=1F4B9569 --passphrase="$SNYK_CODE_SIGNING_GPG_PASSPHRASE" --pinentry-mode=loopback --armor --batch sha256sums.txt
cat sha256sums.txt.asc
popd

BUILD_VERSION="$(jq -r '.version' package.json)"
echo "${BUILD_VERSION}" > binary-releases/version

cp ./release-scripts/release.json binary-releases/release.json
if [[ $(uname -s) == "Darwin" ]];then
    echo "this is Mac"
    sed -i "" "s|1.0.0-monorepo|${BUILD_VERSION}|g" binary-releases/release.json
    sed -i "" "s|snyk-alpine-sha256|$(cat binary-releases/snyk-alpine.sha256)|" binary-releases/release.json
    sed -i "" "s|snyk-linux-sha256|$(cat binary-releases/snyk-linux.sha256)|" binary-releases/release.json
    sed -i "" "s|snyk-linux-arm64-sha256|$(cat binary-releases/snyk-linux-arm64.sha256)|" binary-releases/release.json
    sed -i "" "s|snyk-macos-sha256|$(cat binary-releases/snyk-macos.sha256)|" binary-releases/release.json
    sed -i "" "s|snyk-win.exe-sha256|$(cat binary-releases/snyk-win.exe.sha256)|" binary-releases/release.json
else
    echo "this is Linux"
    sed -i "s|1.0.0-monorepo|${BUILD_VERSION}|g" binary-releases/release.json
    sed -i "s|snyk-alpine-sha256|$(cat binary-releases/snyk-alpine.sha256)|" binary-releases/release.json
    sed -i "s|snyk-linux-sha256|$(cat binary-releases/snyk-linux.sha256)|" binary-releases/release.json
    sed -i "s|snyk-linux-arm64-sha256|$(cat binary-releases/snyk-linux-arm64.sha256)|" binary-releases/release.json
    sed -i "s|snyk-macos-sha256|$(cat binary-releases/snyk-macos.sha256)|" binary-releases/release.json
    sed -i "s|snyk-win.exe-sha256|$(cat binary-releases/snyk-win.exe.sha256)|" binary-releases/release.json
fi

# sanity check if release.json is a valid JSON
jq '.' binary-releases/release.json

# --commit-path is forwarded to `git log <path>`.
#     We're use this to remove CLIv2 changes in v1's changelogs.
# :(exclude) syntax: https://git-scm.com/docs/gitglossary.html#Documentation/gitglossary.txt-exclude
npx conventional-changelog-cli -p angular -l -r 1 --commit-path ':(exclude)cliv2' > binary-releases/RELEASE_NOTES.md

ls -la
